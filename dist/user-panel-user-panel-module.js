(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["user-panel-user-panel-module"],{

/***/ "./src/app/dashboard/dashboard.component.html":
/*!****************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<section style=\"margin-top:169px;\">\n      <div  class=\"Dashboard-UserDetails text-center mt-4\">\n        <div  class=\"container\">\n          <div  class=\"row\">\n              <div  class=\"col-lg-3 col-sm-12\">\n                  <div  class=\"Dashboard-UserDetails-List\"><strong >Account Status :</strong>\n                      <p  class=\"Dashboard_UserDetails-Status\"> Approved </p>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 col-sm-12\">\n                  <div  class=\"Dashboard-UserDetails-List\"><strong >Created On :</strong>\n                      <p  class=\"Dashboard_UserDetails-Date\"> 28/02/2020 </p>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 col-sm-12\">\n                  <div  class=\"Dashboard-UserDetails-List\"><strong >Account Number :</strong>\n                      <p  class=\"Dashboard_UserDetails-Ac-Number\"> SDF945783 </p>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 col-sm-12\">\n                  <div  class=\"Dashboard-UserDetails-List1\"><button  class=\"DashboardBtn\" routerlink=\"/Send_Receive\" tabindex=\"0\" ng-reflect-router-link=\"/Send_Receive\">Send <span  style=\"margin: 0px 7px;\">/</span> Receive</button></div>\n              </div>\n          </div>\n      </div>\n  </div>\n</section>\n<!-- Account Balance -->\n<!-- <section>\n  <div class=\"container-fluid\">\n    <div class=\"row mt-4\">\n      <div class=\"col-lg-6\">\n        <div class=\"Account_Balance\">\n          <div class=\"Account_Balance_Heading\">\n            <p>Account_Balance</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n          <div class=\"Account_Balance\">\n            <div class=\"Account_Balance_Heading\">\n              <p>ID_Verification</p>\n            </div>\n            <div class=\"Dashboard_ID_Verfication\">\n              \n                <ul class=\"IDProof pull-left\">\n                  <li>KYC ID Proof ( FrontSide )</li>\n                  <li>KYC ID Proof ( BackSide )</li>\n                  <li>Selfie ID Proof</li>\n                </ul>\n        \n                <ul class=\"IDProof pull-right\">\n                  <li>Verified</li>\n                  <li>Verified</li>\n                  <li>Verified</li>\n                </ul>\n            </div>\n          </div>\n        </div>\n    </div>\n  </div>\n</section> -->\n\n<section >\n  <div  class=\"container\">\n      <div  class=\"row\">\n          <div  class=\"col-lg-12\">\n              <h2  class=\"Dashboard_Heading mt-4\">Market Price</h2>\n          </div>\n      </div>\n      <div  class=\"Dashboard_MarketPrice_Section\">\n          <div  class=\"row\">\n              <div  class=\"col-lg-3 Dashboard_MarketPrice_List\">\n                  <div  class=\"Dashboard_MarketPrice_List1\">\n                      <p  class=\"pull-right\" style=\"color:green\"><i  aria-hidden=\"true\" class=\"fa fa-caret-up\"></i> 0.84%</p><br >\n                      <h5  class=\"Dashboard_Market_Price_Heading\">Bitcoin</h5><span  class=\"Dashboard_Market_Price_Desc\">BTC</span><br >\n                      <div  class=\"Dashboard_Market_Price_GraphSection\">\n                          <div  class=\"pull-left\"><span  class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br ><span  class=\"Dashboard_Market_Price_Desc\">1.00</span></div>\n                          <div  class=\"pull-right\"><img  alt=\"\" src=\"assets/images/graph1.png\"></div>\n                      </div>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 Dashboard_MarketPrice_List\">\n                  <div  class=\"Dashboard_MarketPrice_List1\">\n                      <p  class=\"pull-right\" style=\"color:red\"><i  aria-hidden=\"true\" class=\"fa fa-caret-down\"></i> 0.84%</p><br >\n                      <h5  class=\"Dashboard_Market_Price_Heading\">Bitcoin</h5><span  class=\"Dashboard_Market_Price_Desc\">BTC</span>\n                      <div  class=\"Dashboard_Market_Price_GraphSection\">\n                          <div  class=\"pull-left\"><span  class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br ><span  class=\"Dashboard_Market_Price_Desc\">1.00</span></div>\n                          <div  class=\"pull-right\"><img  alt=\"\" src=\"assets/images/graph2.png\"></div>\n                      </div>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 Dashboard_MarketPrice_List\">\n                  <div  class=\"Dashboard_MarketPrice_List1\">\n                      <p  class=\"pull-right\" style=\"color:green\"><i  aria-hidden=\"true\" class=\"fa fa-caret-up\"></i> 0.84%</p><br >\n                      <h5  class=\"Dashboard_Market_Price_Heading\">Bitcoin</h5><span  class=\"Dashboard_Market_Price_Desc\">BTC</span>\n                      <div  class=\"Dashboard_Market_Price_GraphSection\">\n                          <div  class=\"pull-left\"><span  class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br ><span  class=\"Dashboard_Market_Price_Desc\">1.00</span></div>\n                          <div  class=\"pull-right\"><img  alt=\"\" src=\"assets/images/grahp3.png\"></div>\n                      </div>\n                  </div>\n              </div>\n              <div  class=\"col-lg-3 Dashboard_MarketPrice_List\">\n                  <div  class=\"Dashboard_MarketPrice_List1\">\n                      <p  class=\"pull-right\" style=\"color:red\"><i  aria-hidden=\"true\" class=\"fa fa-caret-down\"></i> 0.84%</p><br >\n                      <h5  class=\"Dashboard_Market_Price_Heading\">Bitcoin</h5><span  class=\"Dashboard_Market_Price_Desc\">BTC</span>\n                      <div  class=\"Dashboard_Market_Price_GraphSection\">\n                          <div  class=\"pull-left\"><span  class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br ><span  class=\"Dashboard_Market_Price_Desc\">1.00</span></div>\n                          <div  class=\"pull-right\"><img  alt=\"\" src=\"assets/images/graph4.png\"></div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</section>\n \n<!-- Martket Parice Section  -->\n<!-- <section>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <h2 class=\"Dashboard_Heading mt-4\">Market Price</h2>\n      </div>\n    </div>\n      <div class=\"row Dashboard_MarketPrice_Section\">\n        <div class=\"col-lg-3 Dashboard_MarketPrice_List\">\n          <div class=\"Dashboard_MarketPrice_List1\">\n            <p class=\"pull-right\" style=\"color:green\"><i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i> 0.84%</p><br>\n            <h5 class=\"Dashboard_Market_Price_Heading\">Bitcoin</h5><span class=\"Dashboard_Market_Price_Desc\">BTC</span><br>\n            <div class=\"Dashboard_Market_Price_GraphSection\">\n              <div class=\"pull-left\">\n                  <span class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br>\n                  <span class=\"Dashboard_Market_Price_Desc\">1.00</span>\n              </div> \n              <div class=\"pull-right\" >\n                <img src=\"assets/images/graph1.png\" alt=\"\">\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-lg-3 Dashboard_MarketPrice_List\">\n            <div class=\"Dashboard_MarketPrice_List1\">\n              <p class=\"pull-right\" style=\"color:red\"><i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> 0.84%</p><br>\n              <h5 class=\"Dashboard_Market_Price_Heading\">Ripple</h5><span class=\"Dashboard_Market_Price_Desc\">BTC</span>            \n              <div class=\"Dashboard_Market_Price_GraphSection\">\n                  <div class=\"pull-left\">\n                      <span class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br>\n                      <span class=\"Dashboard_Market_Price_Desc\">1.00</span>\n                  </div> \n                  <div class=\"pull-right\" >\n                    <img src=\"assets/images/graph2.png\" alt=\"\">\n                  </div>\n                </div>\n            </div>\n          </div>\n          <div class=\"col-lg-3 Dashboard_MarketPrice_List\">\n              <div class=\"Dashboard_MarketPrice_List1\">\n                <p class=\"pull-right\" style=\"color:green\"><i class=\"fa fa-caret-up\" aria-hidden=\"true\"></i> 0.84%</p><br>\n                <h5 class=\"Dashboard_Market_Price_Heading\">Ethereum</h5><span class=\"Dashboard_Market_Price_Desc\">BTC</span>\n                <div class=\"Dashboard_Market_Price_GraphSection\">\n                    <div class=\"pull-left\">\n                        <span class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br>\n                        <span class=\"Dashboard_Market_Price_Desc\">1.00</span>\n                    </div> \n                    <div class=\"pull-right\" >\n                      <img src=\"assets/images/grahp3.png\" alt=\"\">\n                    </div>\n                  </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 Dashboard_MarketPrice_List\">\n                <div class=\"Dashboard_MarketPrice_List1\">\n                  <p class=\"pull-right\" style=\"color:red\"><i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> 0.84%</p><br>\n                  <h5 class=\"Dashboard_Market_Price_Heading\">Litecoin</h5><span class=\"Dashboard_Market_Price_Desc\">BTC</span>\n                  <div class=\"Dashboard_Market_Price_GraphSection\">\n                      <div class=\"pull-left\">\n                          <span class=\"Dashboard_Market_Price_Desc\">$ 23.565</span><br>\n                          <span class=\"Dashboard_Market_Price_Desc\">1.00</span>\n                      </div> \n                      <div class=\"pull-right\" >\n                        <img src=\"assets/images/graph4.png\" alt=\"\">\n                      </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n  </div>\n</section> -->\n\n<section >\n  <div class=\"container mt-4\">\n    <div class=\"row\">\n      <!-- <div class=\"col-lg-3\" fxHide fxShow.gt-sm>\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">Coin</h2>\n          <div class=\"Dashborad_Profile_section_Coin\">\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Bitcoin(1).png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Layer2.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Layer3.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Zcash@2x.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/dash_dashcoin-512.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/ripple_xrp_coin-512.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Layer4.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/neo-coin-investment-cryptocurrency-tokens-300x300.png\" alt=\"\">\n            </div>\n            <div class=\"col-lg-4 col-sm-4 col-xs-4 Dashboard_Coin_Img\">\n              <img src=\"assets/images/Bitcoin.png\" alt=\"\">\n            </div>\n          </div>\n      </div> -->\n      <div class=\"col-lg-4\">\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">Profile info</h2>\n          <div class=\"Dashborad_Profile_section\">\n              <mat-icon class=\"pull-right Dashboard_Edit_Icon\">create</mat-icon><br>\n              <div class=\"text-center\">\n                  <img src=\"assets/images/Avator.png\" alt=\"\" class=\"Dashboard_Avator_Img text-center\">\n              </div>\n              <p class=\"text-center Dashboard_Profile_Name\">John Deo</p>\n              <p class=\"text-center Dashboard_Profile_MailID\">\n                <span>johndeo2802@gmail.com</span>\n                <span>+91 4658239057</span>\n              </p>\n              <div class=\"Dashboard_Edit_section text-center\">View</div>\n          </div>\n      </div>\n      <div class=\"col-lg-4\">\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">ID Verification</h2>\n          <div class=\"Dashborad_Profile_section\">\n              <mat-icon class=\"pull-right Dashboard_Edit_Icon\">create</mat-icon><br>\n              <div class=\"text-center\">\n                  <img src=\"assets/images/Avator.png\" alt=\"\" class=\"Dashboard_Avator_Img text-center\">\n              </div>\n              <p class=\"text-center Dashboard_Profile_Name\">KYC ID Avaliable</p>\n              <p class=\"text-center Dashboard_Profile_MailID\">\n                <span>Selifi ID proof</span>\n                <span>Adhar Card</span>\n              </p>\n              <div class=\"Dashboard_Edit_section text-center\">View</div>\n          </div>\n      </div>\n      <div class=\"col-lg-4\">\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">Two Factor Authentication</h2>\n          <div class=\"Dashborad_Profile_section\">\n              <mat-icon class=\"pull-right Dashboard_Edit_Icon\">create</mat-icon><br>\n              <div class=\"text-center\">\n                  <img src=\"assets/images/Layer1.png\" alt=\"\" class=\"Dashboard_Avator_Img text-center\">\n              </div>\n              <p class=\"text-center Dashboard_Profile_Name\">Scan QR Code </p>\n              <p class=\"text-center Dashboard_Profile_MailID\">\n                <span>Install Your Code</span>\n                <span>SDE34556778</span>\n              </p>\n              <div class=\"Dashboard_Edit_section text-center\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">View</div>\n\n                            <!-- Modal -->\n              <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                  <div class=\"modal-content\">\n                    \n                      \n                      \n                    \n                    <div class=\"modal-body\">\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                      <div class=\"text-center\">\n                        <div class=\"Model_Title\">Two Factor Authentication</div>\n                        <div class=\"Model_Address text-center\">Afdgf4dsg34DffcDF57</div>\n                        <div class=\"text-center\">\n                          <img src=\"assets/images/Layer1.png\" alt=\"\" class=\"\">\n                      </div>\n                      <p>Scan QR Code</p>\n                      <p>Please save your key this will help you recover your authentication in case of phone loss</p>\n                      <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                        <mat-label>Authentication Key</mat-label>\n                        <input matInput placeholder=\"Palce Your Key Here\">                      \n                      </mat-form-field>\n                      <button class=\"Model_Btn\">Enable</button>\n                      </div>\n                    </div>\n                   \n                  </div>\n                </div>\n              </div>\n              \n          </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div class=\"container\">\n    <div class=\"row mt-4 mb-4\">\n      <div class=\"col-lg-12\">\n          <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 col-lg-12\" style=\"    height: 330px;\">\n        \n              <!--- Note that these columns can be defined in any order.\n                        The actual rendered columns are set as a property on the row definition\" -->\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"position\">\n                  <th mat-header-cell *matHeaderCellDef> No. </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n              </ng-container>\n\n              <!-- Name Column -->\n              <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n              </ng-container>\n\n              <!-- Weight Column -->\n              <ng-container matColumnDef=\"weight\">\n                  <th mat-header-cell *matHeaderCellDef> IP Address </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n              </ng-container>\n\n              <!-- Symbol Column -->\n              <!-- <ng-container matColumnDef=\"symbol\">\n                  <th mat-header-cell *matHeaderCellDef> IFSC Code </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n              </ng-container> -->\n\n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"View\">\n                  <th mat-header-cell *matHeaderCellDef> Device </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                      {{element.View}}\n                  </td>\n              </ng-container>\n\n\n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"Delete\">\n                  <th mat-header-cell *matHeaderCellDef> Country </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    {{element.Delete}}\n                  </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n      </div>\n    </div>\n  </div>\n</section>\n\n<!-- Transaction & Login History Section -->\n<!-- <section>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-sm-12 col-xs-6\">\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">Transaction History</h2>\n          <div class=\"row\">\n            <div class=\"Dashboard_LoginHistory\">\n                            \n            <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                <div class=\"Transaction_History_Icon\">\n                    <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                </div>\n              </div>\n              <div class=\"col-lg-5 col-sm-5 pull-left Transaction_HIstory\">\n                <span>Send: For Exchange</span>\n                <span>John Deo</span>\n              </div>\n              <div class=\"col-lg-5 col-sm-5 pull-right Transaction_HIstory1\">\n                  <span>$ 34.56 | 1.00 BTC</span>\n                  <span>02 Jan 2020</span>\n              </div>\n            </div>\n\n            </div>\n            <div class=\"row\">\n                <div class=\"Dashboard_LoginHistory\">\n                <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                  <div class=\"Transaction_History_Icon1\">\n                      <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n                  </div>\n                </div>\n                <div class=\"col-lg-5 col-sm-5 pull-left Transaction_HIstory\">\n                  <span>Receive: For Exchange</span>\n                  <span>John Deo</span>\n                </div>\n                <div class=\"col-lg-5 col-sm-5 pull-right Transaction_HIstory1\">\n                    <span>$ 34.56 | 1.00 BTC</span>\n                    <span>02 Jan 2020</span>\n                </div>\n              </div>\n              </div>\n\n              <div class=\"row\">\n                  <div class=\"Dashboard_LoginHistory\">\n                  <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                    <div class=\"Transaction_History_Icon\">\n                        <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-5 col-sm-5 pull-left Transaction_HIstory\">\n                    <span>Send: For Exchange</span>\n                    <span>John Deo</span>\n                  </div>\n                  <div class=\"col-lg-5 col-sm-5 pull-right Transaction_HIstory1\">\n                      <span>$ 34.56 | 1.00 BTC</span>\n                      <span>02 Jan 2020</span>\n                  </div>\n                </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"Dashboard_LoginHistory\">\n                    <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                      <div class=\"Transaction_History_Icon1\">\n                          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-5 pull-left Transaction_HIstory\">\n                      <span>Receive: For Exchange</span>\n                      <span>John Deo</span>\n                    </div>\n                    <div class=\"col-lg-5 pull-right Transaction_HIstory1\">\n                        <span>$ 34.56 | 1.00 BTC</span>\n                        <span>02 Jan 2020</span>\n                    </div>\n                  </div>\n                  </div>\n\n                  <div class=\"row\">\n                      <div class=\"Dashboard_LoginHistory\">\n                      <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                        <div class=\"Transaction_History_Icon\">\n                            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                        </div>\n                      </div>\n                      <div class=\"col-lg-5 pull-left Transaction_HIstory\">\n                        <span>Send: For Exchange</span>\n                        <span>John Deo</span>\n                      </div>\n                      <div class=\"col-lg-5 pull-right Transaction_HIstory1\">\n                          <span>$ 34.56 | 1.00 BTC</span>\n                          <span>02 Jan 2020</span>\n                      </div>\n                    </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"Dashboard_LoginHistory\">\n                        <div class=\"col-lg-2 col-sm-2\" fxHide fxShow.gt-sm>\n                              <div class=\"Transaction_History_Icon1\">\n                              <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n                          </div>\n                        </div>\n                        <div class=\"col-lg-5 pull-left Transaction_HIstory\">\n                          <span>Receive: For Exchange</span>\n                          <span>John Deo</span>\n                        </div>\n                        <div class=\"col-lg-5 pull-right Transaction_HIstory1\">\n                            <span>$ 34.56 | 1.00 BTC</span>\n                            <span>02 Jan 2020</span>\n                        </div>\n                      </div>\n                      </div>\n\n          \n      </div>\n      <div class=\"col-lg-6\">\n          <h2 class=\"Dashboard_Heading mt-4 mb-4\">Login History</h2>\n          <div class=\"row\">\n              <div class=\"Dashboard_LoginHistory\">\n                  <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                      <span>Chrome, Window</span>\n                      <span>192.168.2.174</span>\n                    </div>\n                    <div class=\"col-lg-6 pull-right Dashboard_Item2\">\n                        <span>28/01/2020, 08:25:60</span>\n                        <span>India</span>\n                    </div>\n              </div>\n            </div>\n            <div class=\"row \">\n                <div class=\"Dashboard_LoginHistory\">\n                    <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                        <span>Chrome, Window</span>\n                        <span>192.168.2.174</span>\n                      </div>\n                      <div class=\"col-lg-6 pull-right Dashboard_Item2  \">\n                          <span>28/01/2020, 08:25:60</span>\n                          <span>India</span>\n                      </div>\n                </div>\n              </div>\n              <div class=\"row \">\n                  <div class=\"Dashboard_LoginHistory\">\n                      <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                          <span>Chrome, Window</span>\n                          <span>192.168.2.174</span>\n                        </div>\n                        <div class=\"col-lg-6 pull-right Dashboard_Item2  \">\n                            <span>28/01/2020, 08:25:60</span>\n                            <span>India</span>\n                        </div>\n                  </div>\n                </div>\n                <div class=\"row \">\n                    <div class=\"Dashboard_LoginHistory\">\n                        <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                            <span>Chrome, Window</span>\n                            <span>192.168.2.174</span>\n                          </div>\n                          <div class=\"col-lg-6 pull-right Dashboard_Item2  \">\n                              <span>28/01/2020, 08:25:60</span>\n                              <span>India</span>\n                          </div>\n                    </div>\n                  </div>\n                  <div class=\"row \">\n                      <div class=\"Dashboard_LoginHistory\">\n                          <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                              <span>Chrome, Window</span>\n                              <span>192.168.2.174</span>\n                            </div>\n                            <div class=\"col-lg-6 pull-right Dashboard_Item2  \">\n                                <span>28/01/2020, 08:25:60</span>\n                                <span>India</span>\n                            </div>\n                      </div>\n                    </div>\n                    <div class=\"row \">\n                        <div class=\"Dashboard_LoginHistory\">\n                            <div class=\"col-lg-6 pull-left Dashboard_Item1 \">\n                                <span>Chrome, Window</span>\n                                <span>192.168.2.174</span>\n                              </div>\n                              <div class=\"col-lg-6 pull-right Dashboard_Item2  \">\n                                  <span>28/01/2020, 08:25:60</span>\n                                  <span>India</span>\n                              </div>\n                        </div>\n                      </div>\n      </div>\n    </div>\n  </div>\n</section> -->\n\n\n\n"

/***/ }),

/***/ "./src/app/dashboard/dashboard.component.scss":
/*!****************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.scss ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".shakeit:hover {\n  -webkit-animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n          animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n  -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  -webkit-perspective: 1000px;\n          perspective: 1000px; }\n\n@-webkit-keyframes shake {\n  10%, 90% {\n    -webkit-transform: translate3d(-1px, 0, 0);\n            transform: translate3d(-1px, 0, 0); }\n  20%, 80% {\n    -webkit-transform: translate3d(2px, 0, 0);\n            transform: translate3d(2px, 0, 0); }\n  30%, 50%, 70% {\n    -webkit-transform: translate3d(-4px, 0, 0);\n            transform: translate3d(-4px, 0, 0); }\n  40%, 60% {\n    -webkit-transform: translate3d(4px, 0, 0);\n            transform: translate3d(4px, 0, 0); } }\n\n@keyframes shake {\n  10%, 90% {\n    -webkit-transform: translate3d(-1px, 0, 0);\n            transform: translate3d(-1px, 0, 0); }\n  20%, 80% {\n    -webkit-transform: translate3d(2px, 0, 0);\n            transform: translate3d(2px, 0, 0); }\n  30%, 50%, 70% {\n    -webkit-transform: translate3d(-4px, 0, 0);\n            transform: translate3d(-4px, 0, 0); }\n  40%, 60% {\n    -webkit-transform: translate3d(4px, 0, 0);\n            transform: translate3d(4px, 0, 0); } }\n\n.Model_Btn {\n  background-color: #E72B90;\n  border: 1px solid #E72B90;\n  border-radius: 20px;\n  height: 40px;\n  width: 120px;\n  padding: 8px 15px;\n  font-weight: bolder;\n  color: #ffffff;\n  font-size: 14px; }\n\n.Model_Btn:hover {\n    border: 1px solid #E72B90;\n    background-color: #ffffff;\n    color: #E72B90;\n    -webkit-transition-duration: 0.3s;\n            transition-duration: 0.3s;\n    -webkit-transition-delay: 0.1s;\n            transition-delay: 0.1s;\n    -moz-transition-duration: 0.5s;\n    -webkit-transition-duration: 0.7s;\n    -moz-transition-timing-function: ease-in;\n    -webkit-transition-timing-function: ease-in;\n    -moz-box-shadow: 50px 50px 0 0px  white inset , -50px -50px 0 0px white inset;\n    -webkit-box-shadow: 50px 50px 0 0px white inset , -50px -50px 0 0px white inset; }\n\n.Model_Title {\n  color: #333333;\n  font-size: 18px;\n  font-weight: 700; }\n\n.Model_Address {\n  color: #E72B90;\n  font-size: 14px; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n::ng-deep .mat-elevation-z8:hover {\n  box-shadow: 0 0px 15px 0px #E72B90; }\n\n::ng-deep .mat-elevation-z8 {\n  box-shadow: 0 0px 0px 0px #E72B90; }\n\ntr {\n  text-align: center; }\n\ntr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n@media only screen and (max-width: 600px) {\n  .Dashboard-UserDetails {\n    height: auto; }\n  .Exchange_Input {\n    border: 1px solid white;\n    width: 50px;\n    margin-top: 0px;\n    border-bottom: 1px solid black; } }\n\n@media only screen and (max-width: 460px) {\n  .Dashboard_Item1 {\n    display: grid; }\n  .Dashboard_Item2 {\n    display: grid;\n    text-align: right;\n    margin: -42px 0px; }\n  .Transaction_HIstory {\n    display: grid;\n    margin: 0px; }\n  .responsivecss {\n    margin: 4px 20px; } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5RUFBeUQ7VUFBekQsaUVBQXlEO0VBQ3pELHdDQUErQjtVQUEvQixnQ0FBK0I7RUFDL0Isb0NBQTJCO1VBQTNCLDRCQUEyQjtFQUMzQiw0QkFBbUI7VUFBbkIsb0JBQW1CLEVBQ3BCOztBQUVEO0VBQ0U7SUFDSSwyQ0FBa0M7WUFBbEMsbUNBQWtDLEVBQUE7RUFHdEM7SUFDSSwwQ0FBaUM7WUFBakMsa0NBQWlDLEVBQUE7RUFHckM7SUFDSSwyQ0FBa0M7WUFBbEMsbUNBQWtDLEVBQUE7RUFHdEM7SUFDSSwwQ0FBaUM7WUFBakMsa0NBQWlDLEVBQUEsRUFBQTs7QUFkdkM7RUFDRTtJQUNJLDJDQUFrQztZQUFsQyxtQ0FBa0MsRUFBQTtFQUd0QztJQUNJLDBDQUFpQztZQUFqQyxrQ0FBaUMsRUFBQTtFQUdyQztJQUNJLDJDQUFrQztZQUFsQyxtQ0FBa0MsRUFBQTtFQUd0QztJQUNJLDBDQUFpQztZQUFqQyxrQ0FBaUMsRUFBQSxFQUFBOztBQUl2QztFQUNFLDBCQUF5QjtFQUN6QiwwQkFBd0I7RUFDeEIsb0JBQW1CO0VBQ25CLGFBQVk7RUFDWixhQUFZO0VBQ1osa0JBQWlCO0VBQ2pCLG9CQUFtQjtFQUNuQixlQUFjO0VBQ2QsZ0JBQWUsRUFjaEI7O0FBdkJEO0lBV00sMEJBQXlCO0lBQ3pCLDBCQUF5QjtJQUN6QixlQUFjO0lBQ2Qsa0NBQXlCO1lBQXpCLDBCQUF5QjtJQUN6QiwrQkFBc0I7WUFBdEIsdUJBQXNCO0lBQ3RCLCtCQUE4QjtJQUM5QixrQ0FBaUM7SUFDakMseUNBQXdDO0lBQ3hDLDRDQUEyQztJQUMzQyw4RUFBNkU7SUFDN0UsZ0ZBQStFLEVBQ2xGOztBQUdIO0VBQ0ksZUFBYztFQUNkLGdCQUFlO0VBQ2YsaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksZUFBYztFQUNkLGdCQUFlLEVBQ2xCOztBQUNEO0VBQ0UsMEJBQXlCLEVBRTFCOztBQUNEO0VBQ0ksZUFBYztFQUNkLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLG1CQUNKLEVBQUM7O0FBQ0Q7RUFDRSxtQ0FBa0MsRUFDckM7O0FBQ0Q7RUFDSSxrQ0FBaUMsRUFDcEM7O0FBQ0Q7RUFDSSxtQkFBa0IsRUFDckI7O0FBRUQ7RUFDSSxlQUFjO0VBQ2QsMEJBQXlCLEVBQzVCOztBQUVDO0VBQ0U7SUFDQSxhQUFZLEVBQ1g7RUFDRDtJQUNJLHdCQUF1QjtJQUN2QixZQUFXO0lBQ1YsZ0JBQWU7SUFDaEIsK0JBQThCLEVBQ2pDLEVBQUE7O0FBR0g7RUFDRTtJQUNJLGNBQWEsRUFFaEI7RUFDRjtJQUNLLGNBQWE7SUFDYixrQkFBaUI7SUFDakIsa0JBQWlCLEVBQ3BCO0VBRUQ7SUFDSSxjQUFhO0lBQUMsWUFBVyxFQUM1QjtFQUNEO0lBQ0ksaUJBQWdCLEVBQ25CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNoYWtlaXQ6aG92ZXIge1xuICAgIGFuaW1hdGlvbjogc2hha2UgMC44MnMgY3ViaWMtYmV6aWVyKC4zNiwuMDcsLjE5LC45NykgYm90aDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBwZXJzcGVjdGl2ZTogMTAwMHB4O1xuICB9XG4gIFxuICBAa2V5ZnJhbWVzIHNoYWtlIHtcbiAgICAxMCUsIDkwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTFweCwgMCwgMCk7XG4gICAgfVxuICBcbiAgICAyMCUsIDgwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMnB4LCAwLCAwKTtcbiAgICB9XG4gIFxuICAgIDMwJSwgNTAlLCA3MCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC00cHgsIDAsIDApO1xuICAgIH1cbiAgXG4gICAgNDAlLCA2MCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDRweCwgMCwgMCk7XG4gICAgfVxuICB9XG5cbiAgLk1vZGVsX0J0bntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTcyQjkwO1xuICAgIGJvcmRlcjoxcHggc29saWQgI0U3MkI5MDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogMTIwcHg7XG4gICAgcGFkZGluZzogOHB4IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgJjpob3ZlcntcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0U3MkI5MDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgY29sb3I6ICNFNzJCOTA7IFxuICAgICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjNzO1xuICAgICAgICB0cmFuc2l0aW9uLWRlbGF5OiAwLjFzO1xuICAgICAgICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IDAuNXM7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC43cztcbiAgICAgICAgLW1vei10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbjsgXG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW47XG4gICAgICAgIC1tb3otYm94LXNoYWRvdzogNTBweCA1MHB4IDAgMHB4ICB3aGl0ZSBpbnNldCAsIC01MHB4IC01MHB4IDAgMHB4IHdoaXRlIGluc2V0O1xuICAgICAgICAtd2Via2l0LWJveC1zaGFkb3c6IDUwcHggNTBweCAwIDBweCB3aGl0ZSBpbnNldCAsIC01MHB4IC01MHB4IDAgMHB4IHdoaXRlIGluc2V0O1xuICAgIH1cbiAgfVxuXG4gIC5Nb2RlbF9UaXRsZXtcbiAgICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxuXG4gIC5Nb2RlbF9BZGRyZXNze1xuICAgICAgY29sb3I6ICNFNzJCOTA7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbiAgdHIubWF0LWhlYWRlci1yb3d7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbiAgICAvLyBjb2xvcjogI2ZmZmZmZjtcbiAgfVxuICB0aC5tYXQtaGVhZGVyLWNlbGx7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgfVxuICA6Om5nLWRlZXAgLm1hdC1lbGV2YXRpb24tejg6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDAgMHB4IDE1cHggMHB4ICNFNzJCOTA7XG59XG46Om5nLWRlZXAgLm1hdC1lbGV2YXRpb24tejgge1xuICAgIGJveC1zaGFkb3c6IDAgMHB4IDBweCAwcHggI0U3MkI5MDtcbn1cbnRye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudHIubWF0LXJvdzpob3ZlciB0ZCB7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbn1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLkRhc2hib2FyZC1Vc2VyRGV0YWlsc3tcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC5FeGNoYW5nZV9JbnB1dHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgbWFyZ2luLXRvcDogMHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XG4gICAgfVxuICB9XG5cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NjBweCkge1xuICAgIC5EYXNoYm9hcmRfSXRlbTEge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAvLyBtYXJnaW46IC00OHB4IDYwcHg7XG4gICAgfVxuICAgLkRhc2hib2FyZF9JdGVtMiB7XG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBtYXJnaW46IC00MnB4IDBweDtcbiAgICB9XG4gIFxuICAgIC5UcmFuc2FjdGlvbl9ISXN0b3J5IHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDttYXJnaW46IDBweDtcbiAgICB9XG4gICAgLnJlc3BvbnNpdmVjc3N7XG4gICAgICAgIG1hcmdpbjogNHB4IDIwcHg7XG4gICAgfVxuXG4gIH0iXX0= */"

/***/ }),

/***/ "./src/app/dashboard/dashboard.component.ts":
/*!**************************************************!*\
  !*** ./src/app/dashboard/dashboard.component.ts ***!
  \**************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ELEMENT_DATA = [
    { position: 1, name: '28/01/2020 , 18:55:60', weight: '192.168.2.174', symbol: 'Chrome 75', View: 'create', Delete: 'India' },
    { position: 2, name: '28/01/2020 , 18:55:60', weight: '192.168.2.174', symbol: 'Chrome 75', View: 'create', Delete: 'India' },
    { position: 3, name: '28/01/2020 , 18:55:60', weight: '192.168.2.174', symbol: 'Chrome 75', View: 'create', Delete: 'India' },
    { position: 4, name: '28/01/2020 , 18:55:60', weight: '192.168.2.174', symbol: 'Chrome 75', View: 'create', Delete: 'India' },
    { position: 5, name: '28/01/2020 , 18:55:60', weight: '192.168.2.174', symbol: 'Chrome 75', View: 'create', Delete: 'India' },
];
var DashboardComponent = /** @class */ (function () {
    function DashboardComponent() {
        this.displayedColumns = ['position', 'name', 'weight', 'View', 'Delete'];
        this.dataSource = ELEMENT_DATA;
    }
    DashboardComponent.prototype.ngOnInit = function () {
    };
    DashboardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-dashboard',
            template: __webpack_require__(/*! ./dashboard.component.html */ "./src/app/dashboard/dashboard.component.html"),
            styles: [__webpack_require__(/*! ./dashboard.component.scss */ "./src/app/dashboard/dashboard.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], DashboardComponent);
    return DashboardComponent;
}());



/***/ }),

/***/ "./src/app/deposit-withdraw/deposit-withdraw.component.html":
/*!******************************************************************!*\
  !*** ./src/app/deposit-withdraw/deposit-withdraw.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<section style=\"margin-top: 130px;\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"Tab_Section\">\n                    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                        <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Deposit</a>\n                        <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Withdraw</a>\n                        <!-- <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact</a> -->\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- <div class=\"container-fluid\"> -->\n    <!-- <div class=\"row\">\n            <div class=\"col-lg-12\"> -->\n    <!-- Withdraw Tab -->\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n        <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                        <div class=\"Withdraw_Section mb-4\">\n                            <h2 class=\"Dashboard_Sub_Heading mt-4\">Withdraw</h2>\n                            <p class=\"SEND_RECIVE_DESC\">Avaliable Balance : 0.0011251 BTC</p>\n                            <form (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n                                <!-- Currency -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Select Your Currency</mat-label>\n                                    <mat-select required matInput #Currency=\"ngModel\" name=\"Currency\" [(ngModel)]=\"BankDetails.Currency\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">BTC</mat-option>\n                                        <mat-option value=\"option2\">ERK</mat-option>\n                                        <mat-option value=\"option3\">LIT</mat-option>\n                                        <mat-option value=\"option3\">ETH</mat-option>\n                                    </mat-select>\n                                    <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span [hidden]=\"!Currency.errors.required\" class=\"error\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslate>Please select option </span> -->\n                                    <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">Select Your Account</mat-error>\n                                    <!-- </mat-error> -->\n                                </mat-form-field>\n\n                                <!-- Receiver Address -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Withdraw Amount</mat-label>\n                                    <input matInput placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.BranchName\" name=\"BranchName\" #BranchName=\"ngModel\" [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\" required autocomplete=\"off\">\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">BranchName is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">BranchName Incorrect</mat-error>\n                                </mat-form-field>\n\n                                <!-- Currency -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Select Your Bank</mat-label>\n                                    <mat-select required matInput #Bank=\"ngModel\" name=\"Bank\" [(ngModel)]=\"BankDetails.Bank\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">SBI</mat-option>\n                                        <mat-option value=\"option2\">IOB</mat-option>\n                                        <mat-option value=\"option3\">CANARA</mat-option>\n                                        <mat-option value=\"option3\">INDIAN</mat-option>\n\n                                    </mat-select>\n                                    <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span [hidden]=\"!Currency.errors.required\" class=\"error\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslate>Please select option </span> -->\n                                    <mat-error *ngIf=\"Bank.invalid && BankDetails.submitted && Bank.errors?.required\">Select Your Account</mat-error>\n                                    <!-- </mat-error> -->\n                                </mat-form-field>\n\n                                <div class=\"text-center UploadImg mb-4\">\n                                    <img src=\"assets/images/1200px-Add_user_icon_(blue).png\" class=\"\" alt=\"app-dashboard-header\">\n                                    <!-- <p class=\"KYC_Desc\">Your Selfie will help us to make sure that we delivery to the right Person</p>\n                                                    <button class=\"KYC_Upload\">Upload</button> -->\n                                </div>\n                                <div class=\"text-center\">\n                                    <button class=\"SEND_Btn\">Submit</button>\n                                </div>\n\n                                \n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n\n                        <!-- <div class=\"container\"> -->\n                        <div class=\"Tips_Section mb-2\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12\">\n                                <h5 class=\"text-center Tips_Section_Title mt-2 mb-2\" style=\"font-weight:700\">Important Notes!!!</h5>\n                                    <div class=\"Tips_Section_Contant\">\n                                      <ul>\n                                          <li>Please do not withdraw to the ICO or crowd funding address.</li>\n                                                <li>We will process your withdrawal in 30 minutes, it depends on the blockchain when the assets would finally transfered to your wallet.</li>\n                                                <li>Upload your bank passbook for the security purpose</li>\n                                                <li>To enhance the security of your assets, if your withdrawal amount is larger than 100,000 ACT, please double check your withdraw address.</li>\n                                      </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"Tips_Section mb-2\">\n                                <div class=\"row\">\n                                    <div class=\"col-lg-12\">\n                                        <!-- <h6 class=\"text-center\">Tips</h6> -->\n                                        <div class=\"Display_Bank_Details\">\n                                                <h5 class=\"text-center Tips_Section_Title\" style=\"font-weight:700\">User Bank Details</h5>\n                                                <label>Bank Name :</label>\n                                                <label>Bank Account Number :</label>\n                                                <label>Account Holder Name :</label>\n                                                <label>Branch Name :</label>\n                                                <label>IBAN Code :</label>\n                                                <label>Country :</label>\n                                            </div>\n                                        <!-- <div class=\"Tips_Section_Contant\">\n                                          <ul>\n                                              <li>Please do not withdraw to the ICO or crowd funding address.</li>\n                                                    <li>We will process your withdrawal in 30 minutes, it depends on the blockchain when the assets would finally transfered to your wallet.</li>\n                                                    <li>To enhance the security of your assets, if your withdrawal amount is larger than 100,000 ACT, we have to manually process your request, please double check your withdraw address.</li>\n                                          </ul>\n                                        </div> -->\n                                    </div>\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"container\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12\">\n                                    <div class=\"Dashboard-UserDetails\">\n                                        <!-- <div class=\"col-lg-12\"> -->\n                                        <!-- <div class=\"row\"> -->\n                                        <div class=\"pull-left col-lg-6\">\n                                            <h5 class=\"HISTORY_Heading\">History</h5>\n                                        </div>\n                                        <div class=\"pull-left col-lg-6\">\n                                            <form class=\"MarketPriceInput1 pull-right\" style=\"display: inline-flex\">\n                                                <input type=\"text\" placeholder=\"Search\">\n                                                <span><i class=\"fa fa-search\" style=\"margin-left: -35px;margin-top: 10px;color: gray;\" aria-hidden=\"true\"></i></span>\n                                            </form>\n                                        </div>\n                                        <!-- </div> -->\n                                        <!-- </div> -->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12\">\n                                    <div class=\"mat-elevation-z8 mt-2\">\n                                        <table mat-table [dataSource]=\"dataSource\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                        </table>\n\n                                        <mat-paginator [pageSizeOptions]=\"[5 ,10, 20]\"></mat-paginator>\n                                    </div>\n                                </div>\n                            </div>\n                </div>\n                        <!-- </div> -->\n                    <!-- </div> -->\n\n\n\n\n                </div>\n            </div>\n        </div>\n\n        <!-- Withdraw Tab End -->\n\n\n\n        <!-- Deposit Tab Start  -->\n\n        <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"Deposit_Section mb-4\">\n                            <h2 class=\"Dashboard_Sub_Heading mt-4\">Deposit</h2>\n                            <p class=\"SEND_RECIVE_DESC\">Avaliable Balance : 0.0011251 USD</p>\n                            <form (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n\n                                <!-- Currency -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                    <mat-label>Select Your Currency</mat-label>\n                                    <mat-select required matInput #Currency=\"ngModel\" name=\"Currency\" [(ngModel)]=\"BankDetails.Currency\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">BTC</mat-option>\n                                        <mat-option value=\"option2\">ERK</mat-option>\n                                        <mat-option value=\"option3\">LIT</mat-option>\n                                        <mat-option value=\"option3\">ETH</mat-option>\n                                    </mat-select>\n                                    <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span [hidden]=\"!Currency.errors.required\" class=\"error\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslate>Please select option </span> -->\n                                    <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">AccountNo is required</mat-error>\n                                    <!-- </mat-error> -->\n                                </mat-form-field>\n\n                                <!-- Receiver Address -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                    <mat-label>Deposit Amount</mat-label>\n                                    <input matInput placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.BranchName\" name=\"BranchName\" #BranchName=\"ngModel\" [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\" required autocomplete=\"off\">\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">BranchName is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">BranchName Incorrect</mat-error>\n                                </mat-form-field>\n\n                                <!-- Payment Method -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                    <mat-label>Payment Method</mat-label>\n                                    <mat-select required matInput #PaymentMethod=\"ngModel\" name=\"PaymentMethod\" [(ngModel)]=\"BankDetails.PaymentMethod\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">PayPal</mat-option>\n                                        <mat-option value=\"option2\">Tez</mat-option>\n                                        <mat-option value=\"option3\">PhonePe</mat-option>\n                                        <!-- <mat-option value=\"option3\">ETH</mat-option> -->\n                                    </mat-select>\n                                    <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span [hidden]=\"!Currency.errors.required\" class=\"error\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslate>Please select option </span> -->\n                                    <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">AccountNo is required</mat-error>\n                                    <!-- </mat-error> -->\n                                </mat-form-field>\n\n                                <!-- Receiver Address -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                    <mat-label>Transaction ID</mat-label>\n                                    <input matInput placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.BranchName\" name=\"BranchName\" #BranchName=\"ngModel\" [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\" required autocomplete=\"off\">\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">BranchName is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">BranchName Incorrect</mat-error>\n                                </mat-form-field>\n\n                                <!-- <a class=\"PopupBankDetailsLink\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" style=\"cursor:pointer\">For Bank Details Click Here..</a> -->\n\n                                <div class=\"text-center UploadImg mb-4\">\n                                    <img src=\"assets/images/1200px-Add_user_icon_(blue).png\" class=\"\" alt=\"app-dashboard-header\">\n                                    <!-- <p class=\"KYC_Desc\">Your Selfie will help us to make sure that we delivery to the right Person</p>\n                                                    <button class=\"KYC_Upload\">Upload</button> -->\n                                </div>\n                                \n                                <!-- Modal -->\n                                <div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                                    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                        <div class=\"modal-content\">\n                                            <div class=\"modal-body\">\n                                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t</button><br>\n                                                <h3 class=\"text-center Bank_Details_Popup_Title\">Admin Bank Details</h3>\n                                                <div class=\"container\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-lg-12\">\n                                                            <div class=\"Bank_Details_Popup\">\n                                                                <label>Bank Name : ABC</label>\n                                                                <label>Account Holder Name : xxxx</label>\n                                                                <label>Account Number : 59357901250468935</label>\n                                                                <label>IBAN Code : 144728</label>\n                                                                <label>Country : India</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                <button type=\"button\" class=\"Bank_Details_View\" data-dismiss=\"modal\">Close</button>\n                                                <!-- <button type=\"button\" class=\"btn btn-primary\">Save changes</button> -->\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Model View Section End -->\n\n                                <!-- Button -->\n                                <div class=\"text-center mb-4 mt-2\">\n                                    <button class=\"SEND_Btn\">Submit</button>\n                                </div>\n                                <a class=\"Admin_Bank_Details_Popup\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\"> <span class=\"blinking\"> For Admin Bank Details </span></a>\n                            </form>\n                        </div>\n                    </div>\n                    <!-- <div class=\"col-lg-12\"> -->\n\n                        <!-- <div class=\"container\"> -->\n                        <!-- <div class=\"Deposit_Section mb-4\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12\">\n                                    <h3 class=\"Dashboard_Sub_Heading text-center\">Admin Bank Details</h3>\n                                    <div class=\"Bank_Details_Popup\">\n                                        <label>Bank Name : ABC</label>\n                                        <label>Account Holder Name : xxxx</label>\n                                        <label>Account Number : 59357901250468935</label>\n                                        <label>IBAN Code : 144728</label>\n                                        <label>Country : India</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> -->\n                            <!-- <div class=\"row\"> -->\n                                <div class=\"col-lg-12\">\n                                    <div class=\"Dashboard-UserDetails\">\n                                        <!-- <div class=\"col-lg-12\"> -->\n                                        <!-- <div class=\"row\"> -->\n                                        <div class=\"pull-left col-lg-6\">\n                                            <h5 class=\"HISTORY_Heading\">History</h5>\n                                        </div>\n                                        <div class=\"pull-left col-lg-6\">\n                                            <form class=\"MarketPriceInput1 pull-right\" style=\"display: inline-flex\">\n                                                <input type=\"text\" placeholder=\"Search\">\n                                                <span><i class=\"fa fa-search\" style=\"margin-left: -35px;margin-top: 10px;color: gray;\" aria-hidden=\"true\"></i></span>\n                                            </form>\n                                        </div>\n                                        <!-- </div> -->\n                                        <!-- </div> -->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12\">\n                                    <div class=\"mat-elevation-z8 mt-2\">\n                                        <table mat-table [dataSource]=\"dataSource1\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                        </table>\n\n                                        <mat-paginator [pageSizeOptions]=\"[5 ,10, 20]\"></mat-paginator>\n                                    </div>\n                                </div>\n                            <!-- </div> -->\n                        <!-- </div> -->\n                    <!-- </div> -->\n                </div>\n            </div>\n        </div>\n        <!-- Deposit Tab Ends -->\n    </div>\n\n    <!-- </div>\n</div> -->\n    <!-- </div> -->\n\n</section>\n<!-- <section>\n    <div class=\"container mt-4 mb-4\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 text-center\">\n          <h5 class=\"copyright\">&copy;Copyright 2020 U2Admin. All rights reserved.</h5>\n        </div>\n      </div>\n    </div>\n</section> -->"

/***/ }),

/***/ "./src/app/deposit-withdraw/deposit-withdraw.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/deposit-withdraw/deposit-withdraw.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".MarketPriceInput1 input {\n  border: 1px solid #e72b90;\n  width: 94%;\n  border-radius: 20px;\n  padding: 7px;\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin-left: 33px;\n  outline: none; }\n\n.HISTORY_Heading {\n  margin-top: 7px; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\n::ng-deep .mat-elevation-z8:hover {\n  box-shadow: 0 0px 15px 0px #E72B90; }\n\n::ng-deep .mat-elevation-z8 {\n  box-shadow: 0 0px 0px 0px #E72B90; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n@media only screen and (max-width: 600px) {\n  .SEND_RECEIVE_INPUT_SECTION {\n    height: auto; }\n  td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n    font-size: 13px; } }\n\n.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n  color: #0E1F70;\n  font-weight: 700;\n  margin-top: 8px;\n  border: 1px solid #0E1F70;\n  background-color: #E72B90; }\n\n.nav-link:hover {\n  background-color: #E72B90;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item .nav-link, .nav-tabs {\n  color: #0E1F70;\n  font-size: 16px;\n  margin-top: 8px;\n  border-bottom: 1px solid transparent;\n  font-weight: 700; }\n\n.nav-link {\n  background-color: #ffffff;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item {\n  color: #0E1F70;\n  margin-top: 8px;\n  border-radius: 10px; }\n\n.nav-tabs .nav-item:not(:first-child) {\n  margin-left: 10px; }\n\n.Tab_Section {\n  height: 56px;\n  margin-top: 28px; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\nmat-label {\n  font-size: 14px;\n  font-weight: bold;\n  color: #ffffff; }\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #428abc; }\n\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #428abc; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n::ng-deep .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0 0px 15px 0px #428abc; }\n\ninput.mat-input-element {\n  color: #ffffff;\n  font-size: 14px; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n::ng-deep .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0 0px 15px 0px #428abc; }\n\n.Tips_Section_Contant ul li {\n  padding-left: 0px; }\n\n.blinking {\n  -webkit-animation: blinkingText 1.2s infinite;\n          animation: blinkingText 1.2s infinite; }\n\n@-webkit-keyframes blinkingText {\n  0% {\n    color: #E72B90; }\n  49% {\n    color: #E72B90; }\n  60% {\n    color: transparent; }\n  99% {\n    color: transparent; }\n  100% {\n    color: #E72B90; } }\n\n@keyframes blinkingText {\n  0% {\n    color: #E72B90; }\n  49% {\n    color: #E72B90; }\n  60% {\n    color: transparent; }\n  99% {\n    color: transparent; }\n  100% {\n    color: #E72B90; } }\n\n.blinking:hover {\n  color: #E72B90;\n  -webkit-animation: blinkingText 0s infinite;\n          animation: blinkingText 0s infinite; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL2RlcG9zaXQtd2l0aGRyYXcvZGVwb3NpdC13aXRoZHJhdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLDBCQUF3QjtFQUN4QixXQUFVO0VBQ1Ysb0JBQW1CO0VBRW5CLGFBQVk7RUFDWiw0QkFBb0I7RUFBcEIscUJBQW9CO0VBQ3BCLGtCQUFpQjtFQUNqQixjQUFhLEVBQ1o7O0FBQ0Q7RUFDSSxnQkFBZSxFQUNsQjs7QUFFTDtFQUNJLFlBQVc7RUFDWCxtQkFBa0I7RUFDbEIsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQiwwQkFBeUI7RUFDekIsYUFBWSxFQUNmOztBQUNEO0VBQ0ksbUNBQWtDLEVBQ3JDOztBQUNEO0VBQ0ksa0NBQWlDLEVBQ3BDOztBQUNEO0VBQ0ksMEJBQXlCLEVBRTFCOztBQUNEO0VBQ0ksZUFBYztFQUNkLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLG1CQUNKLEVBQUM7O0FBQ0Q7RUFDRTtJQUNJLGFBQVksRUFDZjtFQUNEO0lBQ0ksZ0JBQWUsRUFDbEIsRUFBQTs7QUFHSDtFQUVFLGVBQWM7RUFDZCxpQkFBZ0I7RUFDaEIsZ0JBQWU7RUFDZiwwQkFBeUI7RUFHekIsMEJBQXlCLEVBQzFCOztBQUNEO0VBR0UsMEJBQXlCO0VBQUMsMEJBQXlCLEVBQ3BEOztBQUNEO0VBQ0UsZUFBYztFQUVkLGdCQUFlO0VBQ2YsZ0JBQWU7RUFDZixxQ0FBb0M7RUFDcEMsaUJBQWdCLEVBQ2pCOztBQUNEO0VBQ0ksMEJBQXlCO0VBQ3pCLDBCQUF5QixFQUM1Qjs7QUFDRDtFQUNJLGVBQWM7RUFBQyxnQkFBZTtFQUM5QixvQkFBbUIsRUFDdEI7O0FBQ0Q7RUFDSSxrQkFBaUIsRUFDcEI7O0FBRUQ7RUFFSSxhQUFZO0VBQ1osaUJBQWdCLEVBQ25COztBQUVIO0VBQ0ksZUFBYztFQUFDLDBCQUF5QixFQUN6Qzs7QUFDSDtFQUNJLGdCQUFlO0VBQ2Ysa0JBQWlCO0VBQ2pCLGVBQWMsRUFDakI7O0FBQ0Q7RUFDSSxlQUFjLEVBQ2pCOztBQUVEO0VBQ0UsZUFBYyxFQUNmOztBQUNEO0VBQ0UsZUFBYztFQUFDLDBCQUF5QixFQUN6Qzs7QUFDRDtFQUNFLG1DQUFrQyxFQUNuQzs7QUFDRDtFQUNJLGVBQWM7RUFBQyxnQkFBZSxFQUNqQzs7QUFDRDtFQUNFLGVBQWM7RUFBQywwQkFBeUIsRUFDekM7O0FBQ0Q7RUFDRSxtQ0FBa0MsRUFDbkM7O0FBQ0Q7RUFDSSxrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSw4Q0FBb0M7VUFBcEMsc0NBQW9DLEVBQ3ZDOztBQUNEO0VBQ0k7SUFBUSxlQUFjLEVBQUE7RUFDdEI7SUFBUSxlQUFjLEVBQUE7RUFDdEI7SUFBUSxtQkFBa0IsRUFBQTtFQUMxQjtJQUFRLG1CQUFpQixFQUFBO0VBQ3pCO0lBQVEsZUFBYyxFQUFBLEVBQUE7O0FBTDFCO0VBQ0k7SUFBUSxlQUFjLEVBQUE7RUFDdEI7SUFBUSxlQUFjLEVBQUE7RUFDdEI7SUFBUSxtQkFBa0IsRUFBQTtFQUMxQjtJQUFRLG1CQUFpQixFQUFBO0VBQ3pCO0lBQVEsZUFBYyxFQUFBLEVBQUE7O0FBRTFCO0VBQ0ksZUFBYztFQUNkLDRDQUFrQztVQUFsQyxvQ0FBa0MsRUFDckMiLCJmaWxlIjoic3JjL2FwcC9kZXBvc2l0LXdpdGhkcmF3L2RlcG9zaXQtd2l0aGRyYXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuTWFya2V0UHJpY2VJbnB1dDEgaW5wdXR7XG4gICAgLy8gcGFkZGluZzoxMHB4O1xuICAgIGJvcmRlcjoxcHggc29saWQgI2U3MmI5MDtcbiAgICB3aWR0aDogOTQlO1xuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgLy8gY29sb3I6IGxpZ2h0Z3JleTtcbiAgICBwYWRkaW5nOiA3cHg7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgbWFyZ2luLWxlZnQ6IDMzcHg7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gICAgLkhJU1RPUllfSGVhZGluZ3tcbiAgICAgICAgbWFyZ2luLXRvcDogN3B4O1xuICAgIH1cblxuOjpuZy1kZWVwIC5tYXQtcGFnaW5hdG9yLWljb24ge1xuICAgIHdpZHRoOiAyOHB4O1xuICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzJCOTA7XG4gICAgcGFkZGluZzogNXB4O1xufVxuOjpuZy1kZWVwIC5tYXQtZWxldmF0aW9uLXo4OmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAwIDBweCAxNXB4IDBweCAjRTcyQjkwO1xufVxuOjpuZy1kZWVwIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgICBib3gtc2hhZG93OiAwIDBweCAwcHggMHB4ICNFNzJCOTA7XG59XG50ci5tYXQtaGVhZGVyLXJvd3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xuICAgIC8vIGNvbG9yOiAjZmZmZmZmO1xuICB9XG4gIHRoLm1hdC1oZWFkZXItY2VsbHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuICB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuU0VORF9SRUNFSVZFX0lOUFVUX1NFQ1RJT057XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gICAgdGQubWF0LWNlbGwsIHRkLm1hdC1mb290ZXItY2VsbCwgdGgubWF0LWhlYWRlci1jZWxsIHtcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgIH1cbiAgfVxuXG4gIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssIC5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgICAvLyBiYWNrZ3JvdW5kOiBtb2NjYXNpbjtcbiAgICBjb2xvcjogIzBFMUY3MDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICAgIC8vIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZmZmZjtib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZmZmZjtib3JkZXItbGVmdDogMXB4IHNvbGlkICNmZmZmO1xuICAgIC8vIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMEUxRjcwIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTcyQjkwO1xuICB9XG4gIC5uYXYtbGluazpob3ZlcntcbiAgICAvLyBib3JkZXItdG9wOiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZmZmZjtcbiAgICAvLyBib3JkZXItYm90dG9tOiAycHggc29saWQgIzBFMUY3MCFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3MkI5MDtib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW0gLm5hdi1saW5rLCAubmF2LXRhYnN7XG4gICAgY29sb3I6ICMwRTFGNzA7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICB9XG4gIC5uYXYtbGlua3tcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW17XG4gICAgICBjb2xvcjogIzBFMUY3MDttYXJnaW4tdG9wOiA4cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW06bm90KDpmaXJzdC1jaGlsZCl7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG4gIC5UYWJfU2VjdGlvbntcbiAgICAvLyAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICBoZWlnaHQ6IDU2cHg7XG4gICAgICBtYXJnaW4tdG9wOiAyOHB4O1xuICB9XG5cbjo6bmctZGVlcCB0ci5tYXQtcm93OmhvdmVyIHRkIHtcbiAgICBjb2xvcjogI2ZmZmZmZjtiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xuICB9XG5tYXQtbGFiZWx7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICAgIGNvbG9yOiAjNDI4YWJjO1xufVxuXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gIGNvbG9yOiAjNDI4YWJjO1xufVxuOjpuZy1kZWVwIHRyLm1hdC1yb3c6aG92ZXIgdGQge1xuICBjb2xvcjogI2ZmZmZmZjtiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXBhbmVsOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogMCAwcHggMTVweCAwcHggIzQyOGFiYztcbn1cbmlucHV0Lm1hdC1pbnB1dC1lbGVtZW50IHtcbiAgICBjb2xvcjogI2ZmZmZmZjtmb250LXNpemU6IDE0cHg7XG59XG46Om5nLWRlZXAgdHIubWF0LXJvdzpob3ZlciB0ZCB7XG4gIGNvbG9yOiAjZmZmZmZmO2JhY2tncm91bmQtY29sb3I6ICMwRTFGNzA7XG59XG46Om5nLWRlZXAgLm1hdC1zZWxlY3QtcGFuZWw6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xuICBib3gtc2hhZG93OiAwIDBweCAxNXB4IDBweCAjNDI4YWJjO1xufVxuLlRpcHNfU2VjdGlvbl9Db250YW50IHVsIGxpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xufVxuLmJsaW5raW5ne1xuICAgIGFuaW1hdGlvbjpibGlua2luZ1RleHQgMS4ycyBpbmZpbml0ZTtcbn1cbkBrZXlmcmFtZXMgYmxpbmtpbmdUZXh0e1xuICAgIDAleyAgICAgY29sb3I6ICNFNzJCOTA7ICAgIH1cbiAgICA0OSV7ICAgIGNvbG9yOiAjRTcyQjkwOyB9XG4gICAgNjAleyAgICBjb2xvcjogdHJhbnNwYXJlbnQ7IH1cbiAgICA5OSV7ICAgIGNvbG9yOnRyYW5zcGFyZW50OyAgfVxuICAgIDEwMCV7ICAgY29sb3I6ICNFNzJCOTA7ICAgIH1cbn1cbi5ibGlua2luZzpob3ZlcntcbiAgICBjb2xvcjogI0U3MkI5MDtcbiAgICBhbmltYXRpb246YmxpbmtpbmdUZXh0IDBzIGluZmluaXRlO1xufSJdfQ== */"

/***/ }),

/***/ "./src/app/deposit-withdraw/deposit-withdraw.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/deposit-withdraw/deposit-withdraw.component.ts ***!
  \****************************************************************/
/*! exports provided: DepositWithdrawComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DepositWithdrawComponent", function() { return DepositWithdrawComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");




var ELEMENT_DATA1 = [
    { position: 1, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'Bank' },
    { position: 2, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'Bank' },
    { position: 3, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
    { position: 5, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'PayPal' },
    { position: 6, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'PayPal' },
    { position: 7, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'GooglePay' },
    { position: 8, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'GooglePay' },
    { position: 9, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 10, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
];
var ELEMENT_DATA = [
    { position: 1, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 2, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 3, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
    { position: 5, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'PayPal' },
    { position: 6, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'PayPal' },
    { position: 7, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'GooglePay' },
    { position: 8, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'GooglePay' },
    { position: 9, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Completed', Fee: 'Bank' },
    { position: 10, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'ESD345ID', Status: 'Incompleted', Fee: 'PayPal' },
];
var DepositWithdrawComponent = /** @class */ (function () {
    function DepositWithdrawComponent(http) {
        this.http = http;
        this.displayedColumns = ['name', 'Fee', 'weight', 'symbol', 'Status',];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA);
        this.dataSource1 = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA1);
        this.model = {};
        this.fileData = null;
        this.previewUrl = null;
        this.fileUploadProgress = null;
        this.uploadedFilePath = null;
    }
    // constructor() { }
    DepositWithdrawComponent.prototype.ngOnInit = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource1.paginator = this.paginator;
    };
    DepositWithdrawComponent.prototype.fileProgress = function (fileInput) {
        this.fileData = fileInput.target.files[0];
        this.preview();
    };
    DepositWithdrawComponent.prototype.preview = function () {
        var _this = this;
        // Show preview 
        var mimeType = this.fileData.type;
        if (mimeType.match(/image\/*/) == null) {
            return;
        }
        var reader = new FileReader();
        reader.readAsDataURL(this.fileData);
        reader.onload = function (_event) {
            _this.previewUrl = reader.result;
        };
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], DepositWithdrawComponent.prototype, "paginator", void 0);
    DepositWithdrawComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-deposit-withdraw',
            template: __webpack_require__(/*! ./deposit-withdraw.component.html */ "./src/app/deposit-withdraw/deposit-withdraw.component.html"),
            styles: [__webpack_require__(/*! ./deposit-withdraw.component.scss */ "./src/app/deposit-withdraw/deposit-withdraw.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]])
    ], DepositWithdrawComponent);
    return DepositWithdrawComponent;
}());



/***/ }),

/***/ "./src/app/exchange/exchange.component.html":
/*!**************************************************!*\
  !*** ./src/app/exchange/exchange.component.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- New Code Change -->\n<section style=\"margin-top: 160px;\">\n    <div class=\"container-fluid mt-4 mb-4\">\n        <div class=\"row\">\n            <div class=\"col-lg-12 m-auto\">\n\t\t\t\t<!-- <h1 class=\"Exchange_Heading\">Exchange</h1> -->\n                <div class=\"Sell_Coin_Section\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                    <div class=\"row\">\n                        <div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\n                            <div class=\"Buy_Section\">\n\t\t\t\t\t\t\t\t\t<div class=\"Buy_Sell_Heading mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"BuyCoin_Heading\">Buy Coin</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n                                <form (ngSubmit)=\"SellCoin.form.valid\" #SellCoin=\"ngForm\" novalidate>\n\t\t\t\t\t\t\t\t\t\n\n                                    <!-- Select You Pair  -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                        <mat-label>Select Your Buy Coin</mat-label>\n                                        <mat-select required matInput #S_Coin=\"ngModel\" name=\"S_Coin\" [(ngModel)]=\"SellCoin.S_Coin\">\n                                            <mat-option>None</mat-option>\n                                            <mat-option value=\"option1\">BTC with INR</mat-option>\n                                            <mat-option value=\"option2\">ETH with INR</mat-option>\n                                            <mat-option value=\"option3\">LIT with INR</mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"S_Coin.errors && (S_Coin.dirty || S_Coin.touched || submitted)\">\n                                            <span [hidden]=\"!S_Coin.errors.required\" class=\"error\" translate>Please select option </span>\n                                        </mat-error>\n                                    </mat-form-field>\n\n                                    <!-- Sell Coin Amount -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                        <mat-label>Spend Amount</mat-label>\n                                        <input matInput type=\"text\" placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.S_Amt\" pattern=\"[0-9.]{0,100}$\" name=\"S_Amt\" #S_Amt=\"ngModel\" [ngClass]=\"{ 'is-invalid': SellCoin.submitted && S_Amt.invalid }\" required autocomplete=\"off\">\n                                        <mat-error *ngIf=\"S_Amt.invalid && SellCoin.submitted && S_Amt.errors?.required\">Sell_Amt is required</mat-error>\n                                        <!-- <mat-error *ngIf=\"Code.invalid && SellCoin.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                        <mat-error *ngIf=\"S_Amt.invalid && SellCoin.submitted && S_Amt.errors?.pattern\">Sell_Amt Incorrect</mat-error>\n                                    </mat-form-field>\n\n\n                                    <!-- Receive Amount -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                        <mat-label>Buy Amount</mat-label>\n                                        <input matInput type=\"text\" placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.Sell_R_Amt\" pattern=\"[0-9.]{0,100}$\" name=\"Sell_R_Amt\" #Sell_R_Amt=\"ngModel\" [ngClass]=\"{ 'is-invalid': SellCoin.submitted && Sell_R_Amt.invalid }\" required autocomplete=\"off\">\n                                        <mat-error *ngIf=\"Sell_R_Amt.invalid && SellCoin.submitted && Sell_R_Amt.errors?.required\">Sell_R_Amt is required</mat-error>\n                                        <!-- <mat-error *ngIf=\"Code.invalid && SellCoin.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                        <mat-error *ngIf=\"Sell_R_Amt.invalid && SellCoin.submitted && Sell_R_Amt.errors?.pattern\">Sell_R_Amt Incorrect</mat-error>\n                                    </mat-form-field>\n\n                                    <div class=\"Fee_Section\">\n                                        <p><strong>Fee (0.08%)</strong> : 0.00 INR</p>\n                                        <p><strong>Total</strong> : 0000 INR</p>\n                                    </div>\n\n\n                                    <div class=\"col-lg-12\">\n                                        <div class=\"text-center\">\n                                            <button class=\"DashboardBtn\">Buy Coin</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n\n                        <div class=\"col-lg-6\">\n                            <form (ngSubmit)=\"SellCoin.form.valid\" #SellCoin=\"ngForm\" novalidate>\n\n\t\t\t\t\t\t\t\t<!-- <h2 class=\"BuyCoin_Heading mt-4\">Sell Coin</h2> -->\n\t\t\t\t\t\t\t\t<div class=\"Buy_Sell_Heading mb-4\">\n\t\t\t\t\t\t\t\t\t\t<p class=\"BuyCoin_Heading\">Sell Coin</p>\n\t\t\t\t\t\t\t\t\t</div>\n\n                                <!-- Select You Pair  -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Select Your Sell Coin</mat-label>\n                                    <mat-select required matInput #S_Coin=\"ngModel\" name=\"S_Coin\" [(ngModel)]=\"SellCoin.S_Coin\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">BTC with INR</mat-option>\n                                        <mat-option value=\"option2\">ETH with INR</mat-option>\n                                        <mat-option value=\"option3\">LIT with INR</mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"S_Coin.errors && (S_Coin.dirty || S_Coin.touched || submitted)\">\n                                        <span [hidden]=\"!S_Coin.errors.required\" class=\"error\" translate>Please select option </span>\n                                    </mat-error>\n                                </mat-form-field>\n\n                                <!-- Sell Coin Amount -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Sell Amount</mat-label>\n                                    <input matInput type=\"text\" placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.S_Amt\" pattern=\"[0-9.]{0,100}$\" name=\"S_Amt\" #S_Amt=\"ngModel\" [ngClass]=\"{ 'is-invalid': SellCoin.submitted && S_Amt.invalid }\" required autocomplete=\"off\">\n                                    <mat-error *ngIf=\"S_Amt.invalid && SellCoin.submitted && S_Amt.errors?.required\">Sell_Amt is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && SellCoin.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"S_Amt.invalid && SellCoin.submitted && S_Amt.errors?.pattern\">Sell_Amt Incorrect</mat-error>\n                                </mat-form-field>\n\n\n                                <!-- Receive Amount -->\n                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Receive Amount</mat-label>\n                                    <input matInput type=\"text\" placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [(ngModel)]=\"model.Sell_R_Amt\" pattern=\"[0-9.]{0,100}$\" name=\"Sell_R_Amt\" #Sell_R_Amt=\"ngModel\" [ngClass]=\"{ 'is-invalid': SellCoin.submitted && Sell_R_Amt.invalid }\" required autocomplete=\"off\">\n                                    <mat-error *ngIf=\"Sell_R_Amt.invalid && SellCoin.submitted && Sell_R_Amt.errors?.required\">Sell_R_Amt is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && SellCoin.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"Sell_R_Amt.invalid && SellCoin.submitted && Sell_R_Amt.errors?.pattern\">Sell_R_Amt Incorrect</mat-error>\n                                </mat-form-field>\n\n                                <div class=\"Fee_Section\">\n                                    <p><strong>Fee (0.07%)</strong> : 0.00 INR</p>\n                                    <p><strong>Total</strong> : 0000 INR</p>\n                                </div>\n\n                                <div class=\"col-lg-12\">\n                                    <div class=\"text-center\">\n                                        <button class=\"DashboardBtn\">Sell Coin</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t<!-- Table Section -->\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t\t<h2 class=\"BuyCoin_Table_Heading mt-4\">Buy Coin History</h2>\n\t\t\t\t\t\t\t\t<div class=\"mat-elevation-z8 mt-2\">\n                                        <table mat-table [dataSource]=\"dataSource\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\n                                        </table>\n\n                                        <mat-paginator  #paginator [pageSizeOptions]=\"[5 ,7, 10]\"></mat-paginator>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-center mt-4 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<button class=\"BUY_SELL_ViewMore\">View More</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div class=\"col-lg-6\">\n\t\t\t\t\t\t\t<div class=\"Sell_Section\">\n\t\t\t\t\t\t\t\t<h1 class=\"BuyCoin_Table_Heading mt-4\">Sell Coin History</h1>\n\t\t\t\t\t\t\t\t<div class=\"mat-elevation-z8 mt-2\">\n                                        <table mat-table [dataSource]=\"dataSource\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\n                                        </table>\n\n                                        <mat-paginator  #paginator2 [pageSizeOptions]=\"[5 ,7, 10]\"></mat-paginator>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"text-center mt-4 mb-4\">\n\t\t\t\t\t\t\t\t\t\t<button class=\"BUY_SELL_ViewMore\">View More</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n            </div>\n        </div>\n    </div>\n</section>"

/***/ }),

/***/ "./src/app/exchange/exchange.component.scss":
/*!**************************************************!*\
  !*** ./src/app/exchange/exchange.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "th {\n  width: 130px; }\n\ntr {\n  text-align: center; }\n\n.Table_Deatils {\n  background-color: #ffffff;\n  height: 60px;\n  font-size: 14px;\n  font-weight: 100;\n  text-align: center; }\n\n.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n  color: #0E1F70;\n  font-weight: 700;\n  margin-top: 8px;\n  border: 1px solid #0E1F70;\n  background-color: #E72B90; }\n\n.nav-link:hover {\n  background-color: #E72B90;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item .nav-link, .nav-tabs {\n  color: #0E1F70;\n  font-size: 16px;\n  margin-top: 8px;\n  border-bottom: 1px solid transparent;\n  font-weight: 700; }\n\n.nav-link {\n  background-color: #ffffff;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item {\n  color: #0E1F70;\n  margin-top: 8px;\n  border-radius: 10px; }\n\n.nav-tabs .nav-item:not(:first-child) {\n  margin-left: 10px; }\n\n.Tab_Section {\n  height: 56px;\n  margin-top: 28px; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\n::ng-deep .mat-elevation-z8:hover {\n  box-shadow: 0 0px 15px 0px #E72B90; }\n\n::ng-deep .mat-elevation-z8 {\n  box-shadow: 0 0px 0px 0px #E72B90; }\n\nmat-label {\n  font-size: 14px;\n  font-weight: bold;\n  color: #ffffff; }\n\n::ng-deep .mat-select-arrow {\n  color: #ffffff; }\n\n::ng-deep .mat-select-value-text {\n  color: #ffffff;\n  font-size: 14; }\n\ninput.mat-input-element {\n  color: #ffffff;\n  font-size: 14px; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n@media only screen and (max-width: 600px) {\n  td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n    font-size: 13px; } }\n\n::ng-deep .mat-form-field-infix {\n  display: block;\n  position: relative;\n  -webkit-box-flex: 1;\n          flex: auto;\n  min-width: 0;\n  width: 84px !important; }\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #428abc; }\n\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #428abc; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n::ng-deep .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0 0px 15px 0px #428abc; }\n\n@media only screen and (max-width: 600px) {\n  .Dashboard-UserDetails {\n    height: auto; }\n  .Exchange_History1 {\n    background-color: #ffffff;\n    margin: 0px;\n    padding: 10px;\n    height: auto;\n    font-size: 12px; }\n  .Exchange_History {\n    background-color: #ffffff;\n    margin: 5px;\n    padding: 10px;\n    height: auto;\n    font-size: 12px; } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL2V4Y2hhbmdlL2V4Y2hhbmdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksYUFBWSxFQUVmOztBQUNEO0VBQ0ksbUJBQWtCLEVBQ3JCOztBQUNEO0VBQ0ksMEJBQXlCO0VBQ3pCLGFBQVk7RUFDWixnQkFBZTtFQUNmLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFFckI7O0FBQ0Q7RUFFSSxlQUFjO0VBQ2QsaUJBQWdCO0VBQ2hCLGdCQUFlO0VBQ2YsMEJBQXlCO0VBR3pCLDBCQUF5QixFQUMxQjs7QUFDRDtFQUdFLDBCQUF5QjtFQUN6QiwwQkFBeUIsRUFDMUI7O0FBQ0Q7RUFDRSxlQUFjO0VBRWQsZ0JBQWU7RUFDZixnQkFBZTtFQUNmLHFDQUFvQztFQUNwQyxpQkFBZ0IsRUFDakI7O0FBQ0Q7RUFDSSwwQkFBeUI7RUFDekIsMEJBQXlCLEVBQzVCOztBQUNEO0VBQ0ksZUFBYztFQUFDLGdCQUFlO0VBQzlCLG9CQUFtQixFQUN0Qjs7QUFDRDtFQUNJLGtCQUFpQixFQUNwQjs7QUFFRDtFQUVJLGFBQVk7RUFDWixpQkFBZ0IsRUFDbkI7O0FBQ0g7RUFDSSxZQUFXO0VBQ1gsbUJBQWtCO0VBQ2xCLGFBQVk7RUFDWixtQkFBa0I7RUFDbEIsMEJBQXlCO0VBQ3pCLGFBQVksRUFDZjs7QUFDRDtFQUNJLG1DQUFrQyxFQUNyQzs7QUFDRDtFQUNJLGtDQUFpQyxFQUNwQzs7QUFDRDtFQUNJLGdCQUFlO0VBQ2Ysa0JBQWlCO0VBQ2pCLGVBQWMsRUFDakI7O0FBQ0Q7RUFDSSxlQUFjLEVBQ2pCOztBQUNEO0VBQ0ksZUFBYztFQUFDLGNBQWEsRUFDL0I7O0FBQ0Q7RUFDSSxlQUFjO0VBQUMsZ0JBQWUsRUFDakM7O0FBQ0Q7RUFDSSwwQkFBeUIsRUFFMUI7O0FBQ0Q7RUFDSSxlQUFjO0VBQ2QsZ0JBQWU7RUFDZixpQkFBZ0I7RUFDaEIsbUJBQ0osRUFBQzs7QUFDRDtFQUlFO0lBQ0ksZ0JBQWUsRUFDbEIsRUFBQTs7QUFFTDtFQUNJLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIsb0JBQVU7VUFBVixXQUFVO0VBQ1YsYUFBWTtFQUNaLHVCQUFzQixFQUN6Qjs7QUFFRDtFQUNJLGVBQWMsRUFDakI7O0FBRUQ7RUFDRSxlQUFjLEVBQ2Y7O0FBQ0Q7RUFDRSxlQUFjO0VBQUMsMEJBQXlCLEVBQ3pDOztBQUNEO0VBQ0UsbUNBQWtDLEVBQ25DOztBQUNEO0VBQ0k7SUFDQSxhQUFZLEVBQ1g7RUFDRDtJQUNJLDBCQUF5QjtJQUN6QixZQUFXO0lBQ1gsY0FBYTtJQUNiLGFBQVk7SUFDWixnQkFBZSxFQUNsQjtFQUNEO0lBQ0ksMEJBQXlCO0lBQ3pCLFlBQVc7SUFDWCxjQUFhO0lBQ2IsYUFBWTtJQUNaLGdCQUFlLEVBQ2xCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9leGNoYW5nZS9leGNoYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxudGh7XG4gICAgd2lkdGg6IDEzMHB4O1xuICAgIFxufVxudHJ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLlRhYmxlX0RlYXRpbHN7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICAvLyBtYXJnaW46IDVweCAwcHg7XG59XG4ubmF2LXRhYnMgLm5hdi1pdGVtLnNob3cgLm5hdi1saW5rLCAubmF2LXRhYnMgLm5hdi1saW5rLmFjdGl2ZSB7XG4gICAgLy8gYmFja2dyb3VuZDogbW9jY2FzaW47XG4gICAgY29sb3I6ICMwRTFGNzA7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgICAvLyBib3JkZXItdG9wOiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZmZmZjtcbiAgICAvLyBib3JkZXItYm90dG9tOiAycHggc29saWQgIzBFMUY3MCFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3MkI5MDtcbiAgfVxuICAubmF2LWxpbms6aG92ZXJ7XG4gICAgLy8gYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmZmZmO2JvcmRlci1yaWdodDogMXB4IHNvbGlkICNmZmZmO2JvcmRlci1sZWZ0OiAxcHggc29saWQgI2ZmZmY7XG4gICAgLy8gYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwRTFGNzAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzJCOTA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVtIC5uYXYtbGluaywgLm5hdi10YWJze1xuICAgIGNvbG9yOiAjMEUxRjcwO1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxuICAubmF2LWxpbmt7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVte1xuICAgICAgY29sb3I6ICMwRTFGNzA7bWFyZ2luLXRvcDogOHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpe1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cblxuICAuVGFiX1NlY3Rpb257XG4gICAgLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgaGVpZ2h0OiA1NnB4O1xuICAgICAgbWFyZ2luLXRvcDogMjhweDtcbiAgfVxuOjpuZy1kZWVwIC5tYXQtcGFnaW5hdG9yLWljb24ge1xuICAgIHdpZHRoOiAyOHB4O1xuICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzJCOTA7XG4gICAgcGFkZGluZzogNXB4O1xufVxuOjpuZy1kZWVwIC5tYXQtZWxldmF0aW9uLXo4OmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAwIDBweCAxNXB4IDBweCAjRTcyQjkwO1xufVxuOjpuZy1kZWVwIC5tYXQtZWxldmF0aW9uLXo4IHtcbiAgICBib3gtc2hhZG93OiAwIDBweCAwcHggMHB4ICNFNzJCOTA7XG59XG5tYXQtbGFiZWx7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LWFycm93IHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbn1cbjo6bmctZGVlcCAubWF0LXNlbGVjdC12YWx1ZS10ZXh0IHtcbiAgICBjb2xvcjogI2ZmZmZmZjtmb250LXNpemU6IDE0O1xufVxuaW5wdXQubWF0LWlucHV0LWVsZW1lbnQge1xuICAgIGNvbG9yOiAjZmZmZmZmO2ZvbnQtc2l6ZTogMTRweDtcbn1cbnRyLm1hdC1oZWFkZXItcm93e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwRTFGNzA7XG4gICAgLy8gY29sb3I6ICNmZmZmZmY7XG4gIH1cbiAgdGgubWF0LWhlYWRlci1jZWxse1xuICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyXG4gIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC8vIC5TRU5EX1JFQ0VJVkVfSU5QVVRfU0VDVElPTntcbiAgICAvLyAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIC8vIH1cbiAgICB0ZC5tYXQtY2VsbCwgdGQubWF0LWZvb3Rlci1jZWxsLCB0aC5tYXQtaGVhZGVyLWNlbGwge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgfVxuICB9XG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxleDogYXV0bztcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgd2lkdGg6IDg0cHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICAgIGNvbG9yOiAjNDI4YWJjO1xufVxuXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gIGNvbG9yOiAjNDI4YWJjO1xufVxuOjpuZy1kZWVwIHRyLm1hdC1yb3c6aG92ZXIgdGQge1xuICBjb2xvcjogI2ZmZmZmZjtiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXBhbmVsOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogMCAwcHggMTVweCAwcHggIzQyOGFiYztcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuRGFzaGJvYXJkLVVzZXJEZXRhaWxze1xuICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gICAgLkV4Y2hhbmdlX0hpc3RvcnkxIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgbWFyZ2luOiAwcHg7IFxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICBoZWlnaHQ6IGF1dG87IFxuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICAgIC5FeGNoYW5nZV9IaXN0b3J5IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgbWFyZ2luOiA1cHg7IFxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICBoZWlnaHQ6IGF1dG87IFxuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxufSJdfQ== */"

/***/ }),

/***/ "./src/app/exchange/exchange.component.ts":
/*!************************************************!*\
  !*** ./src/app/exchange/exchange.component.ts ***!
  \************************************************/
/*! exports provided: ExchangeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExchangeComponent", function() { return ExchangeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var ELEMENT_DATA = [
    { position: 1, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 2, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 3, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 4, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Incompleted' },
    { position: 5, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 6, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 7, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 8, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 9, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
    { position: 10, name: '12/12/20 12:45:02', weight: 'BTC-INR', symbol: '0.00034530', Status: 'Completed' },
];
var ExchangeComponent = /** @class */ (function () {
    function ExchangeComponent() {
        this.displayedColumns = ['name', 'weight', 'symbol', 'Status'];
        this.displayedColumns1 = ['name', 'weight', 'symbol', 'Status'];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA);
        this.dataSource1 = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA);
        this.model = {};
    }
    ExchangeComponent.prototype.ngOnInit = function () {
        // this.dataSource.paginator = this.paginator;
    };
    ExchangeComponent.prototype.ngAfterViewInit = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource1.paginator = this.paginator2;
    };
    ExchangeComponent.prototype._setDataSource = function (indexNumber) {
        var _this = this;
        setTimeout(function () {
            switch (indexNumber) {
                case 0:
                    !_this.dataSource.paginator ? _this.dataSource.paginator = _this.paginator : null;
                    break;
                case 1:
                    !_this.dataSource1.paginator ? _this.dataSource1.paginator = _this.paginator2 : null;
            }
        });
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('paginator'),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], ExchangeComponent.prototype, "paginator", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('paginator2'),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], ExchangeComponent.prototype, "paginator2", void 0);
    ExchangeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-exchange',
            template: __webpack_require__(/*! ./exchange.component.html */ "./src/app/exchange/exchange.component.html"),
            styles: [__webpack_require__(/*! ./exchange.component.scss */ "./src/app/exchange/exchange.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ExchangeComponent);
    return ExchangeComponent;
}());



/***/ }),

/***/ "./src/app/send-receive/send-receive.component.html":
/*!**********************************************************!*\
  !*** ./src/app/send-receive/send-receive.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<section style=\"margin-top: 130px;\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"Tab_Section\">\n                    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                        <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Send</a>\n                        <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Receive</a>\n                        <!-- <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact</a> -->\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <!-- <div class=\"container-fluid\"> -->\n    <!-- <div class=\"row\">\n            <div class=\"col-lg-12\"> -->\n    <!-- Withdraw Tab -->\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n        <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"Withdraw_Section mb-4\">\n                            <h2 class=\"Dashboard_Sub_Heading mt-4\">Send</h2>\n                            <p class=\"SEND_RECIVE_DESC\">Avaliable Balance : 0.0011251 BTC</p>\n                            <form class=\"col-lg-12\" (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n                                <!-- <div  SEND_RECEIVE_INPUT_SECTION>  -->\n                                    <!-- Currency -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                      <mat-label>Select Your Currency</mat-label>\n                                      <mat-select required matInput #Currency=\"ngModel\"\n                                        name=\"Currency\" [(ngModel)]=\"BankDetails.Currency\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">BTC</mat-option>\n                                        <mat-option value=\"option2\">ERK</mat-option>\n                                        <mat-option value=\"option3\">LIT</mat-option>\n                                        <mat-option value=\"option3\">ETH</mat-option>\n                                      </mat-select>\n                                      <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n                                        <span [hidden]=\"!Currency.errors.required\" class=\"error\"\n                                        translate>Please select option </span>\n                                        </mat-error> -->\n                                        <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">AccountNo is required</mat-error>\n                                    </mat-form-field>  \n            \n                                    <!-- Amount -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                      <mat-label>Amount Number</mat-label>\n                                      <input matInput placeholder=\"Amount\" class=\"matInputt\" \n                                        autocomplete=\"off\" [(ngModel)]=\"model.AccountNumber\"\n                                        name=\"AccountNumber\" pattern=\"[0-9]{0,20}\"\n                                        #AccountNumber=\"ngModel\"\n                                        [ngClass]=\"{ 'is-invalid': BankDetails.submitted && AccountNumber.invalid }\"\n                                        required autocomplete=\"off\" \n                                        >\n                                        <mat-error *ngIf=\"AccountNumber.invalid && BankDetails.submitted && AccountNumber.errors?.required\">AccountNo is required</mat-error>\n                                        <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                        <mat-error *ngIf=\"AccountNumber.invalid && BankDetails.submitted && AccountNumber.errors?.pattern\">AccountNo. Incorrect</mat-error>\n                                    </mat-form-field>\n            \n                                    <!-- Receiver Address -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                        <mat-label>Receiver Address</mat-label>\n                                        <input matInput placeholder=\"Amount\" class=\"matInputt\"\n                                        autocomplete=\"off\" [(ngModel)]=\"model.BranchName\"\n                                        name=\"BranchName\" pattern=\"[a-zA-Z0-9]{0,20}\"\n                                        #BranchName=\"ngModel\"\n                                        [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\"\n                                        required autocomplete=\"off\" \n                                        >\n                                        <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">Receiver Address is required</mat-error>\n                                        <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                        <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">Receiver Address Incorrect</mat-error>\n                                    </mat-form-field>\n            \n                                    <!-- Description -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                      <mat-label>Description</mat-label>\n                                      <input matInput placeholder=\"Description\" class=\"matInputt\" \n                                      autocomplete=\"off\" [(ngModel)]=\"model.Description\"\n                                      name=\"Description\" \n                                      #Description=\"ngModel\"\n                                      [ngClass]=\"{ 'is-invalid': BankDetails.submitted && Description.invalid }\"\n                                      required autocomplete=\"off\" \n                                      >\n                                      <mat-error *ngIf=\"Description.invalid && BankDetails.submitted && Description.errors?.required\">Description is required</mat-error>\n                                      <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                      <!-- <mat-error *ngIf=\"Description.invalid && BankDetails.submitted && Description.errors?.pattern\">Description Incorrect</mat-error> -->\n                                  </mat-form-field>\n            \n                                    <!-- Code -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                      <mat-label>TFA Code</mat-label>\n                                      <input matInput placeholder=\"TFA Code\" class=\"matInputt\" \n                                      autocomplete=\"off\" [(ngModel)]=\"model.Code\"\n                                      name=\"Code\" pattern=\"[0-9]{0,6}\"\n                                      #Code=\"ngModel\"\n                                      [ngClass]=\"{ 'is-invalid': BankDetails.submitted && Code.invalid }\"\n                                      required autocomplete=\"off\" \n                                      >\n                                      <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.required\">Code is required</mat-error>\n                                      <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                      <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.pattern\">Code Incorrect</mat-error>\n                                  </mat-form-field>\n            \n                                    <div class=\"col-lg-12\">\n                                        <p class=\"SEND_RECIVE_DESC\">Fee (0.05%):0.000514BTC<br> Total Amount : 0.0272325BTC</p>\n                                    </div>\n            \n                                    <!-- Button -->\n                                    <div class=\"col-lg-12 text-center\" fxLayoutAlign=\"center center\">\n                                      <button class=\"SEND_Btn\">SEND</button>\n                                    </div>\n                                 \n                            \n                              <!-- </div> -->\n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-12\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12\">\n                                    <div class=\"Dashboard-UserDetails mt-4\">\n                                        <!-- <div class=\"col-lg-12\"> -->\n                                        <!-- <div class=\"row\"> -->\n                                        <div class=\"pull-left col-lg-6\">\n                                            <h5 class=\"HISTORY_Heading\">History</h5>\n                                        </div>\n                                        <div class=\"pull-left col-lg-6\">\n                                            <form class=\"MarketPriceInput1 pull-right\" style=\"display: inline-flex\">\n                                                <input type=\"text\" placeholder=\"Search\">\n                                                <span><i class=\"fa fa-search\" style=\"margin-left: -35px;margin-top: 10px;color: gray;\" aria-hidden=\"true\"></i></span>\n                                            </form>\n                                        </div>\n                                        <!-- </div> -->\n                                        <!-- </div> -->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12\">\n                                    <div class=\"mat-elevation-z8 mt-4\">\n                                        <table mat-table [dataSource]=\"dataSource\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                        </table>\n\n                                        <mat-paginator  #paginator [pageSizeOptions]=\"[7  ,10, 20]\"></mat-paginator>\n                                    </div>\n                                </div>\n                            </div>\n                        <!-- </div> -->\n                    </div>\n\n\n\n\n                </div>\n            </div>\n        </div>\n\n        <!-- Withdraw Tab End -->\n\n\n\n        <!-- Deposit Tab Start  -->\n\n        <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"Deposit_Section mb-4\">\n                            <h2 class=\"Dashboard_Sub_Heading mt-4\">Receive</h2>\n                            <p class=\"SEND_RECIVE_DESC\">Avaliable Balance : 0.0011251 USD</p>\n                            <form (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n                                <div class=\"row\">\n                                  <div class=\"col-lg-12\">\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                      <mat-label>Select Your Currency</mat-label>\n                                      <mat-select required matInput #Currency=\"ngModel\"\n                                        name=\"Currency\" [(ngModel)]=\"BankDetails.Currency\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option value=\"option1\">BTC</mat-option>\n                                        <mat-option value=\"option2\">ERK</mat-option>\n                                        <mat-option value=\"option3\">LIT</mat-option>\n                                        <mat-option value=\"option3\">ETH</mat-option>\n                                      </mat-select>\n                                      <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n                                        <span [hidden]=\"!Currency.errors.required\" class=\"error\"\n                                        translate>Please select option </span> -->\n                                        <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">AccountNo is required</mat-error>\n                                        <!-- </mat-error> -->\n                                    </mat-form-field>   \n                                        <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                          <mat-label>BTC Address</mat-label>\n                                          <input matInput placeholder=\"Address\" class=\"matInputt\"\n                                          autocomplete=\"off\" [(ngModel)]=\"model.BranchName\"\n                                          name=\"BranchName\" #inputTarget\n                                          #BranchName=\"ngModel\"\n                                          [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\"\n                                          required autocomplete=\"off\" \n                                          >\n                                          <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">Address is required</mat-error>\n                                          <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                          <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">Address Incorrect</mat-error>\n                                      </mat-form-field>\n                                  </div>\n                                \n                                  \n                                  <div class=\"col-lg-12 text-center\">\n                                      <img src=\"assets/images/Layer1.png\" alt=\"\" width=\"25%\">\n                                      <h5>Scan QR Code</h5>\n                                  </div>\n                                  <div class=\"col-lg-12 text-center\">\n                                      <p class=\"SEND_RECIVE_DESC\">Minmium Request Amount : 122.0005BTC</p>\n                                    <button class=\"SEND_Btn\" [ngxClipboard]=\"inputTarget\" (click)=\"CopyText()\" [disabled]=\"!BankDetails.valid\">Copy Address</button>\n                                  </div>\n                                </div>\n                                </form>\n                              \n                        </div>\n                    </div>\n                    <div class=\"col-lg-12\">\n                            <div class=\"row\">\n                                <div class=\"col-lg-12\">\n                                    <div class=\"Dashboard-UserDetails mt-4\">\n                                        <!-- <div class=\"col-lg-12\"> -->\n                                        <!-- <div class=\"row\"> -->\n                                        <div class=\"pull-left col-lg-6\">\n                                            <h5 class=\"HISTORY_Heading\">History</h5>\n                                        </div>\n                                        <div class=\"pull-left col-lg-6\">\n                                            <form class=\"MarketPriceInput1 pull-right\" style=\"display: inline-flex\">\n                                                <input type=\"text\" placeholder=\"Search\">\n                                                <span><i class=\"fa fa-search\" style=\"margin-left: -35px;margin-top: 10px;color: gray;\" aria-hidden=\"true\"></i></span>\n                                            </form>\n                                        </div>\n                                        <!-- </div> -->\n                                        <!-- </div> -->\n                                    </div>\n                                </div>\n\n                                <div class=\"col-lg-12\">\n                                    <div class=\"mat-elevation-z8 mt-4\">\n                                        <table mat-table [dataSource]=\"dataSource1\" class=\"col-lg-12 text-center\">\n\n                                            <!-- Name Column -->\n                                            <ng-container matColumnDef=\"name\">\n                                                <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                            </ng-container>\n\n                                            <!-- Weight Column -->\n                                            <ng-container matColumnDef=\"weight\">\n                                                <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                            </ng-container>\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Fee\">\n                                                <th mat-header-cell *matHeaderCellDef>Payment </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.Fee}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"symbol\">\n                                                <th mat-header-cell *matHeaderCellDef> Transaction ID </th>\n                                                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                            </ng-container>\n\n                                            <!-- Symbol Column -->\n                                            <ng-container matColumnDef=\"Status\">\n                                                <th mat-header-cell *matHeaderCellDef>Status </th>\n                                                <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                            </ng-container>\n\n\n\n                                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns1\"></tr>\n                                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns1;\"></tr>\n                                        </table>\n\n                                        <mat-paginator  #paginator2 [pageSizeOptions]=\"[10 ,7, 20]\"></mat-paginator>\n                                    </div>\n                                </div>\n                            </div>\n                        <!-- </div> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- Deposit Tab Ends -->\n    </div>\n\n    <!-- </div>\n</div> -->\n    <!-- </div> -->\n\n</section>\n<!-- <section>\n    <div class=\"container mt-4 mb-4\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 text-center\">\n          <h5 class=\"copyright\">&copy;Copyright 2020 U2Admin. All rights reserved.</h5>\n        </div>\n      </div>\n    </div>\n</section> -->\n\n\n\n\n\n\n"

/***/ }),

/***/ "./src/app/send-receive/send-receive.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/send-receive/send-receive.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".MarketPriceInput1 input {\n  border: 1px solid #e72b90;\n  width: 94%;\n  border-radius: 20px;\n  padding: 7px;\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin-left: 33px;\n  outline: none; }\n\n.HISTORY_Heading {\n  margin-top: 7px; }\n\nmat-label {\n  font-size: 14px;\n  font-weight: bold;\n  color: #ffffff; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n@media only screen and (max-width: 600px) {\n  .SEND_RECEIVE_INPUT_SECTION {\n    height: auto; } }\n\n@media only screen and (max-width: 400px) {\n  .Send_Receive_Table {\n    width: 100%;\n    overflow-x: scroll; } }\n\n.MarketPriceInput1 input {\n  border: 1px solid #e72b90;\n  width: 94%;\n  border-radius: 20px;\n  padding: 7px;\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin-left: 33px;\n  outline: none; }\n\n.HISTORY_Heading {\n  margin-top: 7px; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\n::ng-deep .mat-elevation-z8:hover {\n  box-shadow: 0 0px 15px 0px #E72B90; }\n\n::ng-deep .mat-elevation-z8 {\n  box-shadow: 0 0px 0px 0px #E72B90; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n@media only screen and (max-width: 600px) {\n  .SEND_RECEIVE_INPUT_SECTION {\n    height: auto; }\n  td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n    font-size: 13px; } }\n\n.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n  color: #0E1F70;\n  font-weight: 700;\n  margin-top: 8px;\n  border: 1px solid #0E1F70;\n  background-color: #E72B90; }\n\n.nav-link:hover {\n  background-color: #E72B90;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item .nav-link, .nav-tabs {\n  color: #0E1F70;\n  font-size: 16px;\n  margin-top: 8px;\n  border-bottom: 1px solid transparent;\n  font-weight: 700; }\n\n.nav-link {\n  background-color: #ffffff;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item {\n  color: #0E1F70;\n  margin-top: 8px;\n  border-radius: 10px; }\n\n.nav-tabs .nav-item:not(:first-child) {\n  margin-left: 10px; }\n\n.Tab_Section {\n  height: 56px;\n  margin-top: 28px; }\n\n::ng-deep .mat-select-arrow {\n  color: #ffffff; }\n\n::ng-deep .mat-select-value-text {\n  color: #ffffff;\n  font-size: 14; }\n\n::ng-deep .mat-form-field-infix {\n  display: block;\n  position: relative;\n  -webkit-box-flex: 1;\n          flex: auto;\n  min-width: 0;\n  width: 84px !important; }\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #428abc; }\n\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #428abc; }\n\ninput.mat-input-element {\n  color: #ffffff;\n  font-size: 14px; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n::ng-deep .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0 0px 15px 0px #428abc; }\n\n.Tips_Section_Contant ul li {\n  padding-left: 0px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL3NlbmQtcmVjZWl2ZS9zZW5kLXJlY2VpdmUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSwwQkFBd0I7RUFDeEIsV0FBVTtFQUNWLG9CQUFtQjtFQUVuQixhQUFZO0VBQ1osNEJBQW9CO0VBQXBCLHFCQUFvQjtFQUNwQixrQkFBaUI7RUFDakIsY0FBYSxFQUNaOztBQUNEO0VBQ0ksZ0JBQWUsRUFDbEI7O0FBQ0Q7RUFDSSxnQkFBZTtFQUNmLGtCQUFpQjtFQUNqQixlQUFjLEVBQ2pCOztBQUNMO0VBQ0ksWUFBVztFQUNYLG1CQUFrQjtFQUNsQixhQUFZO0VBQ1osbUJBQWtCO0VBQ2xCLDBCQUF5QjtFQUN6QixhQUFZLEVBQ2Y7O0FBSUQ7RUFDSSwwQkFBeUIsRUFFMUI7O0FBQ0Q7RUFDSSxlQUFjO0VBQ2QsZ0JBQWU7RUFDZixpQkFBZ0I7RUFDaEIsbUJBQ0osRUFBQzs7QUFDRDtFQUNBO0lBQ0ksYUFBWSxFQUNmLEVBQUE7O0FBRUg7RUFDSTtJQUNJLFlBQVc7SUFDWCxtQkFBa0IsRUFDckIsRUFBQTs7QUFHSDtFQUVFLDBCQUF3QjtFQUN4QixXQUFVO0VBQ1Ysb0JBQW1CO0VBRW5CLGFBQVk7RUFDWiw0QkFBb0I7RUFBcEIscUJBQW9CO0VBQ3BCLGtCQUFpQjtFQUNqQixjQUFhLEVBQ1o7O0FBQ0Q7RUFDSSxnQkFBZSxFQUNsQjs7QUFFTDtFQUNJLFlBQVc7RUFDWCxtQkFBa0I7RUFDbEIsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQiwwQkFBeUI7RUFDekIsYUFBWSxFQUNmOztBQUNEO0VBQ0ksbUNBQWtDLEVBQ3JDOztBQUNEO0VBQ0ksa0NBQWlDLEVBQ3BDOztBQUNEO0VBQ0ksMEJBQXlCLEVBRTFCOztBQUNEO0VBQ0ksZUFBYztFQUNkLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLG1CQUNKLEVBQUM7O0FBQ0Q7RUFDRTtJQUNJLGFBQVksRUFDZjtFQUNEO0lBQ0ksZ0JBQWUsRUFDbEIsRUFBQTs7QUFHSDtFQUVFLGVBQWM7RUFDZCxpQkFBZ0I7RUFDaEIsZ0JBQWU7RUFDZiwwQkFBeUI7RUFHekIsMEJBQXlCLEVBQzFCOztBQUNEO0VBR0UsMEJBQXlCO0VBQ3pCLDBCQUF5QixFQUMxQjs7QUFDRDtFQUNFLGVBQWM7RUFFZCxnQkFBZTtFQUNmLGdCQUFlO0VBQ2YscUNBQW9DO0VBQ3BDLGlCQUFnQixFQUNqQjs7QUFDRDtFQUNJLDBCQUF5QjtFQUN6QiwwQkFBeUIsRUFDNUI7O0FBQ0Q7RUFDSSxlQUFjO0VBQUMsZ0JBQWU7RUFDOUIsb0JBQW1CLEVBQ3RCOztBQUNEO0VBQ0ksa0JBQWlCLEVBQ3BCOztBQUVEO0VBRUksYUFBWTtFQUNaLGlCQUFnQixFQUNuQjs7QUFhSDtFQUNJLGVBQWMsRUFDakI7O0FBQ0Q7RUFDSSxlQUFjO0VBQUMsY0FBYSxFQUMvQjs7QUFDRDtFQUNJLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIsb0JBQVU7VUFBVixXQUFVO0VBQ1YsYUFBWTtFQUNaLHVCQUFzQixFQUN6Qjs7QUFDRDtFQUNJLGVBQWMsRUFDakI7O0FBQ0Q7RUFDRSxlQUFjLEVBQ2Y7O0FBQ0Q7RUFDSSxlQUFjO0VBQUMsZ0JBQWUsRUFDakM7O0FBQ0Q7RUFDRSxlQUFjO0VBQUMsMEJBQXlCLEVBQ3pDOztBQUNEO0VBQ0UsbUNBQWtDLEVBQ25DOztBQUNEO0VBQ0ksa0JBQWlCLEVBQ3BCIiwiZmlsZSI6InNyYy9hcHAvc2VuZC1yZWNlaXZlL3NlbmQtcmVjZWl2ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5NYXJrZXRQcmljZUlucHV0MSBpbnB1dHtcbiAgICAvLyBwYWRkaW5nOjEwcHg7XG4gICAgYm9yZGVyOjFweCBzb2xpZCAjZTcyYjkwO1xuICAgIHdpZHRoOiA5NCU7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAvLyBjb2xvcjogbGlnaHRncmV5O1xuICAgIHBhZGRpbmc6IDdweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBtYXJnaW4tbGVmdDogMzNweDtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cbiAgICAuSElTVE9SWV9IZWFkaW5ne1xuICAgICAgICBtYXJnaW4tdG9wOiA3cHg7XG4gICAgfVxuICAgIG1hdC1sYWJlbHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgY29sb3I6ICNmZmZmZmY7XG4gICAgfVxuOjpuZy1kZWVwIC5tYXQtcGFnaW5hdG9yLWljb24ge1xuICAgIHdpZHRoOiAyOHB4O1xuICAgIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzJCOTA7XG4gICAgcGFkZGluZzogNXB4O1xufVxuLy8gOjpuZy1kZWVwIC5tYXQtZWxldmF0aW9uLXo4IHtcbi8vICAgICBib3gtc2hhZG93OiAwIDVweCA1cHggLTNweCAjZmZmZmZmLCAwIDhweCAxMHB4IDFweCAjZmZmZmZmLCAwIDNweCAxNHB4IDJweCAjZmZmZmZmO1xuLy8gfVxudHIubWF0LWhlYWRlci1yb3d7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbiAgICAvLyBjb2xvcjogI2ZmZmZmZjtcbiAgfVxuICB0aC5tYXQtaGVhZGVyLWNlbGx7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gIC5TRU5EX1JFQ0VJVkVfSU5QVVRfU0VDVElPTntcbiAgICAgIGhlaWdodDogYXV0bztcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAgIC5TZW5kX1JlY2VpdmVfVGFibGV7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBvdmVyZmxvdy14OiBzY3JvbGw7XG4gICAgfVxuICB9XG5cbiAgLk1hcmtldFByaWNlSW5wdXQxIGlucHV0e1xuICAgIC8vIHBhZGRpbmc6MTBweDtcbiAgICBib3JkZXI6MXB4IHNvbGlkICNlNzJiOTA7XG4gICAgd2lkdGg6IDk0JTtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIC8vIGNvbG9yOiBsaWdodGdyZXk7XG4gICAgcGFkZGluZzogN3B4O1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiAzM3B4O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICAgIC5ISVNUT1JZX0hlYWRpbmd7XG4gICAgICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICB9XG5cbjo6bmctZGVlcCAubWF0LXBhZ2luYXRvci1pY29uIHtcbiAgICB3aWR0aDogMjhweDtcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTcyQjkwO1xuICAgIHBhZGRpbmc6IDVweDtcbn1cbjo6bmctZGVlcCAubWF0LWVsZXZhdGlvbi16ODpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogMCAwcHggMTVweCAwcHggI0U3MkI5MDtcbn1cbjo6bmctZGVlcCAubWF0LWVsZXZhdGlvbi16OCB7XG4gICAgYm94LXNoYWRvdzogMCAwcHggMHB4IDBweCAjRTcyQjkwO1xufVxudHIubWF0LWhlYWRlci1yb3d7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbiAgICAvLyBjb2xvcjogI2ZmZmZmZjtcbiAgfVxuICB0aC5tYXQtaGVhZGVyLWNlbGx7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLlNFTkRfUkVDRUlWRV9JTlBVVF9TRUNUSU9Oe1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIHRkLm1hdC1jZWxsLCB0ZC5tYXQtZm9vdGVyLWNlbGwsIHRoLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG4gIH1cblxuICAubmF2LXRhYnMgLm5hdi1pdGVtLnNob3cgLm5hdi1saW5rLCAubmF2LXRhYnMgLm5hdi1saW5rLmFjdGl2ZSB7XG4gICAgLy8gYmFja2dyb3VuZDogbW9jY2FzaW47XG4gICAgY29sb3I6ICMwRTFGNzA7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgICAvLyBib3JkZXItdG9wOiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZmZmZjtcbiAgICAvLyBib3JkZXItYm90dG9tOiAycHggc29saWQgIzBFMUY3MCFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3MkI5MDtcbiAgfVxuICAubmF2LWxpbms6aG92ZXJ7XG4gICAgLy8gYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmZmZmO2JvcmRlci1yaWdodDogMXB4IHNvbGlkICNmZmZmO2JvcmRlci1sZWZ0OiAxcHggc29saWQgI2ZmZmY7XG4gICAgLy8gYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwRTFGNzAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNzJCOTA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVtIC5uYXYtbGluaywgLm5hdi10YWJze1xuICAgIGNvbG9yOiAjMEUxRjcwO1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxuICAubmF2LWxpbmt7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzBFMUY3MDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVte1xuICAgICAgY29sb3I6ICMwRTFGNzA7bWFyZ2luLXRvcDogOHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuICAubmF2LXRhYnMgLm5hdi1pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpe1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cblxuICAuVGFiX1NlY3Rpb257XG4gICAgLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgaGVpZ2h0OiA1NnB4O1xuICAgICAgbWFyZ2luLXRvcDogMjhweDtcbiAgfVxuXG4vLyAgIDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcbi8vICAgICAgIGNvbG9yOiAjRTcyQjkwO1xuLy8gfVxuXG4vLyA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4vLyAgICAgY29sb3I6ICNFNzJCOTA7XG4vLyB9XG4vLyA6Om5nLWRlZXAgdHIubWF0LXJvdzpob3ZlciB0ZCB7XG4vLyAgICAgY29sb3I6ICNmZmZmZmY7YmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbi8vICAgfVxuXG46Om5nLWRlZXAgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXZhbHVlLXRleHQge1xuICAgIGNvbG9yOiAjZmZmZmZmO2ZvbnQtc2l6ZTogMTQ7XG59XG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZmxleDogYXV0bztcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgd2lkdGg6IDg0cHggIWltcG9ydGFudDtcbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcbiAgICBjb2xvcjogIzQyOGFiYztcbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtYXBwZWFyYW5jZS1vdXRsaW5lLm1hdC1mb2N1c2VkIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lLXRoaWNrIHtcbiAgY29sb3I6ICM0MjhhYmM7XG59XG5pbnB1dC5tYXQtaW5wdXQtZWxlbWVudCB7XG4gICAgY29sb3I6ICNmZmZmZmY7Zm9udC1zaXplOiAxNHB4O1xufVxuOjpuZy1kZWVwIHRyLm1hdC1yb3c6aG92ZXIgdGQge1xuICBjb2xvcjogI2ZmZmZmZjtiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXBhbmVsOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogMCAwcHggMTVweCAwcHggIzQyOGFiYztcbn1cbi5UaXBzX1NlY3Rpb25fQ29udGFudCB1bCBsaXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/send-receive/send-receive.component.ts":
/*!********************************************************!*\
  !*** ./src/app/send-receive/send-receive.component.ts ***!
  \********************************************************/
/*! exports provided: SendReceiveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SendReceiveComponent", function() { return SendReceiveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm5/ngx-clipboard.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/toastr.es5.js");





// export interface PeriodicElement1 {
//   name: any;
//   position: number;
//   weight: any;
//   symbol: any;
//   Status: any;
// }
// const ELEMENT_DATA1: PeriodicElement1[] = [
//   {position: 1, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 2, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 3, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Incompleted'},
//   {position: 5, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 6, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 7, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 8, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 9, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
//   {position: 10, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed'},
// ];
var ELEMENT_DATA = [
    { position: 1, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 2, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 3, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Incompleted' },
    { position: 5, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 6, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 7, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 8, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 9, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 10, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
];
var SendReceiveComponent = /** @class */ (function () {
    function SendReceiveComponent(_clipboardService, toastr) {
        this._clipboardService = _clipboardService;
        this.toastr = toastr;
        this.displayedColumns = ['name', 'weight', 'symbol', 'Status'];
        this.displayedColumns1 = ['name', 'weight', 'symbol', 'Status'];
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA);
        this.dataSource1 = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA);
        this.model = {};
    }
    SendReceiveComponent.prototype.ngOnInit = function () {
        // this.dataSource.paginator = this.paginator;
        // this.dataSource1.paginator1 = this.paginator1;
    };
    SendReceiveComponent.prototype.ngAfterViewInit = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource1.paginator = this.paginator2;
    };
    SendReceiveComponent.prototype._setDataSource = function (indexNumber) {
        var _this = this;
        setTimeout(function () {
            switch (indexNumber) {
                case 0:
                    !_this.dataSource.paginator ? _this.dataSource.paginator = _this.paginator : null;
                    break;
                case 1:
                    !_this.dataSource1.paginator ? _this.dataSource1.paginator = _this.paginator2 : null;
            }
        });
    };
    // Copy String 
    SendReceiveComponent.prototype.copy = function (text) {
        this._clipboardService.copyFromContent(text);
    };
    SendReceiveComponent.prototype.CopyText = function () {
        this.toastr.success('Address Copied');
        console.log("Hello");
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('paginator'),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], SendReceiveComponent.prototype, "paginator", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('paginator2'),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], SendReceiveComponent.prototype, "paginator2", void 0);
    SendReceiveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-send-receive',
            template: __webpack_require__(/*! ./send-receive.component.html */ "./src/app/send-receive/send-receive.component.html"),
            styles: [__webpack_require__(/*! ./send-receive.component.scss */ "./src/app/send-receive/send-receive.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [ngx_clipboard__WEBPACK_IMPORTED_MODULE_3__["ClipboardService"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
    ], SendReceiveComponent);
    return SendReceiveComponent;
}());



/***/ }),

/***/ "./src/app/send-receivet/send-receivet.component.html":
/*!************************************************************!*\
  !*** ./src/app/send-receivet/send-receivet.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n          <section style=\"margin-top:150px;\">\n            <div class=\"containerr\">\n              <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <div class=\"col-lg-12 Dashboard-UserDetails\" style=\"height: 56px;\">\n                        <ul class=\"Setting_Heading1\">\n                          <li routerLink='/Send'>SEND</li>\n                          <li routerLink='/Send_Receivet' style=\"border-bottom: 2px solid #020748\">RECEIVE</li>\n                        </ul>\n                    </div>\n                    <div class=\"col-lg-12 RECEIVE_INPUT_SECTION\">\n                        \n                        <form (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n                          <div class=\"row\">\n                          <div class=\"col-lg-12\">\n                              <h2 class=\"Dashboard_Heading mt-4\">BTC</h2>\n                              <p class=\"SEND_RECIVE_DESC\">0.0011251 BTC</p>\n                          </div>  \n                         \n                            <div class=\"col-lg-6\">\n                              <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                <mat-label>Select Your Currency</mat-label>\n                                <mat-select required matInput #Currency=\"ngModel\"\n                                  name=\"Currency\" [(ngModel)]=\"BankDetails.Currency\">\n                                  <mat-option>None</mat-option>\n                                  <mat-option value=\"option1\">BTC</mat-option>\n                                  <mat-option value=\"option2\">ERK</mat-option>\n                                  <mat-option value=\"option3\">LIT</mat-option>\n                                  <mat-option value=\"option3\">ETH</mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"Currency.errors && (Currency.dirty || Currency.touched || submitted)\">\n                                  <span [hidden]=\"!Currency.errors.required\" class=\"error\"\n                                  translate>Please select option </span> -->\n                                  <mat-error *ngIf=\"Currency.invalid && BankDetails.submitted && Currency.errors?.required\">AccountNo is required</mat-error>\n                                  <!-- </mat-error> -->\n                              </mat-form-field>   \n                                  <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                    <mat-label>Receiver Address</mat-label>\n                                    <input matInput placeholder=\"Amount\" class=\"matInputt\"\n                                    autocomplete=\"off\" [(ngModel)]=\"model.BranchName\"\n                                    name=\"BranchName\" \n                                    #BranchName=\"ngModel\"\n                                    [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\"\n                                    required autocomplete=\"off\" \n                                    >\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">Address is required</mat-error>\n                                    <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                    <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">Address Incorrect</mat-error>\n                                </mat-form-field>\n                            </div>\n                          \n                            \n                            <div class=\"col-lg-6 text-center\">\n                                <img src=\"assets/images/Layer1.png\" alt=\"\" width=\"60%\">\n                                <h5>Scan QR Code</h5>\n                            </div>\n                            <div class=\"col-lg-12 text-center\">\n                                <p class=\"SEND_RECIVE_DESC\">Minmium Request Amount : 122.0005BTC</p>\n                              <button class=\"SEND_Btn\">Submit</button>\n                            </div>\n                          </div>\n                          </form>\n                        \n                      \n                      </div>\n                  </div>\n                  <div class=\"col-lg-6\">\n                      <div class=\"col-lg-12 Dashboard-UserDetails\" style=\"height: 56px;\">\n                          <div class=\"col-lg-6 pull-left\">\n                              <h5 class=\"HISTORY_Heading\">History</h5>\n                            </div>\n                            <!-- <div class=\"\"> -->\n                                <form class=\"MarketPriceInput1 col-lg-6\" style=\"display: inline-flex\">\n                                    <input type=\"text\" placeholder=\"Search\">\n                                    <span><i class=\"fa fa-search\" style=\"margin-left: -35px;    margin-top: 10px;\n                                      color: gray;\" aria-hidden=\"true\"></i></span>\n                                  </form>\n                            <!-- </div> -->\n                      </div>\n                      <div class=\"mt-4\">\n                          <div class=\"mat-elevation-z8 Send_Receive_Table\">\n                              <table mat-table [dataSource]=\"dataSource\" class=\"col-lg-12 text-center\">\n                            \n                                <!-- Position Column -->\n                                <!-- <ng-container matColumnDef=\"position\">\n                                  <th mat-header-cell *matHeaderCellDef> No. </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                                </ng-container> -->\n                            \n                                <!-- Name Column -->\n                                <ng-container matColumnDef=\"name\">\n                                  <th mat-header-cell *matHeaderCellDef> Date & Time </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                </ng-container>\n                            \n                                <!-- Weight Column -->\n                                <ng-container matColumnDef=\"weight\">\n                                  <th mat-header-cell *matHeaderCellDef> Amount </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                </ng-container>\n                            \n                                <!-- Symbol Column -->\n                                <ng-container matColumnDef=\"symbol\">\n                                  <th mat-header-cell *matHeaderCellDef> Receiver Address </th>\n                                  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                </ng-container>\n  \n                                  <!-- Symbol Column -->\n                                  <ng-container matColumnDef=\"Status\">\n                                      <th mat-header-cell *matHeaderCellDef>Status </th>\n                                      <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.Status === 'Incompleted' ? 'red' : 'green' }\"> {{element.Status}} </td>\n                                    </ng-container>\n                            \n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                              </table>\n                            \n                              <mat-paginator [pageSizeOptions]=\"[6 ,5, 10]\"></mat-paginator>\n                            </div>\n                            \n                                \n                      </div>     \n                  </div>\n              </div>\n            </div>\n          </section>\n         \n          <section>\n              <div class=\"container mt-4 mb-4\">\n                <div class=\"row\">\n                  <div class=\"col-lg-12 text-center\">\n                    <h5 class=\"copyright\" style=\"color:black;\">&copy;Copyright 2020 U2Admin. All rights reserved.</h5>\n                  </div>\n                </div>\n              </div>\n            </section>\n       \n\n\n\n<!--  -->\n<!-- <div class=\"col-lg-12 SEND_RECEIVE_INPUT_SECTION\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <h2 class=\"Dashboard_Heading mt-4\">BTC</h2>\n          <p class=\"SEND_RECIVE_DESC\">0.0011251 BTC</p>\n      </div>  \n        <div class=\"col-lg-6\">\n            <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                <mat-label>Select Your Currency</mat-label>\n                <mat-select [(value)]=\"selected\">\n                  <mat-option>None</mat-option>\n                  <mat-option value=\"option1\">BTC</mat-option>\n                  <mat-option value=\"option2\">ERK</mat-option>\n                  <mat-option value=\"option3\">LIT</mat-option>\n                  <mat-option value=\"option3\">ETH</mat-option>\n                </mat-select>\n              </mat-form-field>  \n              <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                <mat-label>Receiver Address</mat-label>\n                <input matInput placeholder=\"Amount\" class=\"matInputt\" autocomplete=\"off\" [type]=\"hide ? 'password' : 'text'\">\n               \n              </mat-form-field>\n        </div>\n       \n        \n        <div class=\"col-lg-6 text-center\">\n            <img src=\"assets/images/Layer1.png\" alt=\"\" width=\"60%\">\n            <h5>Scan QR Code</h5>\n        </div>\n        <div class=\"col-lg-12 text-center\">\n            <p class=\"SEND_RECIVE_DESC\">Minmium Request Amount : 122.0005BTC</p>\n          <button class=\"SEND_Btn\">Submit</button>\n        </div>\n    </div>\n      \n  </div> -->"

/***/ }),

/***/ "./src/app/send-receivet/send-receivet.component.scss":
/*!************************************************************!*\
  !*** ./src/app/send-receivet/send-receivet.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".MarketPriceInput1 input {\n  border: 1px solid #e72b90;\n  width: 94%;\n  border-radius: 20px;\n  padding: 7px;\n  display: -webkit-inline-box;\n  display: inline-flex;\n  margin-left: 33px;\n  outline: none; }\n\n.HISTORY_Heading {\n  margin-top: 7px; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n@media only screen and (max-width: 600px) {\n  .SEND_RECEIVE_INPUT_SECTION {\n    height: auto; }\n  .MarketPriceInput1 input {\n    border: 1px solid #e72b90;\n    width: 94%;\n    border-radius: 20px;\n    padding: 7px;\n    display: -webkit-inline-box;\n    display: inline-flex;\n    margin-left: 0px !important;\n    outline: none; } }\n\n@media only screen and (max-width: 400px) {\n  .Send_Receive_Table {\n    width: 100%;\n    overflow-x: scroll; } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL3NlbmQtcmVjZWl2ZXQvc2VuZC1yZWNlaXZldC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLDBCQUF3QjtFQUN4QixXQUFVO0VBQ1Ysb0JBQW1CO0VBRW5CLGFBQVk7RUFDWiw0QkFBb0I7RUFBcEIscUJBQW9CO0VBQ3BCLGtCQUFpQjtFQUNqQixjQUFhLEVBQ1o7O0FBQ0Q7RUFDSSxnQkFBZSxFQUNsQjs7QUFFTDtFQUNJLFlBQVc7RUFDWCxtQkFBa0I7RUFDbEIsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQiwwQkFBeUI7RUFDekIsYUFBWSxFQUNmOztBQUVEO0VBQ0ksMEJBQXlCLEVBRTFCOztBQUNEO0VBQ0ksZUFBYztFQUNkLGdCQUFlO0VBQ2YsaUJBQWdCO0VBQ2hCLG1CQUNKLEVBQUM7O0FBQ0Q7RUFDRTtJQUNJLGFBQVksRUFDZjtFQUNEO0lBQ0ksMEJBQXlCO0lBQ3pCLFdBQVU7SUFDVixvQkFBbUI7SUFDbkIsYUFBWTtJQUNaLDRCQUEyQjtJQUMzQixxQkFBb0I7SUFDcEIsNEJBQTBCO0lBQzFCLGNBQWEsRUFDaEIsRUFBQTs7QUFFSDtFQUNFO0lBQ0ksWUFBVztJQUNYLG1CQUFrQixFQUNyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VuZC1yZWNlaXZldC9zZW5kLXJlY2VpdmV0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLk1hcmtldFByaWNlSW5wdXQxIGlucHV0e1xuICAgIC8vIHBhZGRpbmc6MTBweDtcbiAgICBib3JkZXI6MXB4IHNvbGlkICNlNzJiOTA7XG4gICAgd2lkdGg6IDk0JTtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIC8vIGNvbG9yOiBsaWdodGdyZXk7XG4gICAgcGFkZGluZzogN3B4O1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIG1hcmdpbi1sZWZ0OiAzM3B4O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICAgIC5ISVNUT1JZX0hlYWRpbmd7XG4gICAgICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICB9XG5cbjo6bmctZGVlcCAubWF0LXBhZ2luYXRvci1pY29uIHtcbiAgICB3aWR0aDogMjhweDtcbiAgICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTcyQjkwO1xuICAgIHBhZGRpbmc6IDVweDtcbn1cblxudHIubWF0LWhlYWRlci1yb3d7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFMUY3MDtcbiAgICAvLyBjb2xvcjogI2ZmZmZmZjtcbiAgfVxuICB0aC5tYXQtaGVhZGVyLWNlbGx7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbiAgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLlNFTkRfUkVDRUlWRV9JTlBVVF9TRUNUSU9Oe1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC5NYXJrZXRQcmljZUlucHV0MSBpbnB1dHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U3MmI5MDtcbiAgICAgICAgd2lkdGg6IDk0JTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgcGFkZGluZzogN3B4O1xuICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWlubGluZS1ib3g7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMHB4IWltcG9ydGFudDsgXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgICAuU2VuZF9SZWNlaXZlX1RhYmxle1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xuICAgIH1cbiAgfSJdfQ== */"

/***/ }),

/***/ "./src/app/send-receivet/send-receivet.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/send-receivet/send-receivet.component.ts ***!
  \**********************************************************/
/*! exports provided: SendReceivetComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SendReceivetComponent", function() { return SendReceivetComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");



var ELEMENT_DATA1 = [
    { position: 1, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 2, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 3, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 4, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Incompleted' },
    { position: 5, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 6, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 7, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 8, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 9, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
    { position: 10, name: '12/12/20 12:45:02', weight: '354.00 BTC', symbol: 'A56dfGfmd05VSHfH', Status: 'Completed' },
];
var SendReceivetComponent = /** @class */ (function () {
    function SendReceivetComponent() {
        this.displayedColumns = ['name', 'weight', 'symbol', 'Status'];
        this.dataSource1 = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](ELEMENT_DATA1);
        this.model = {};
    }
    SendReceivetComponent.prototype.ngOnInit = function () {
        this.dataSource1.paginator = this.paginator;
    };
    SendReceivetComponent.prototype.NextStep2 = function () {
        this.isShow = !this.isShow;
    };
    SendReceivetComponent.prototype.NextStep1 = function () {
        this.isShow1 = !this.isShow1;
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatPaginator"])
    ], SendReceivetComponent.prototype, "paginator", void 0);
    SendReceivetComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-send-receivet',
            template: __webpack_require__(/*! ./send-receivet.component.html */ "./src/app/send-receivet/send-receivet.component.html"),
            styles: [__webpack_require__(/*! ./send-receivet.component.scss */ "./src/app/send-receivet/send-receivet.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], SendReceivetComponent);
    return SendReceivetComponent;
}());



/***/ }),

/***/ "./src/app/support/support.component.html":
/*!************************************************!*\
  !*** ./src/app/support/support.component.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n\n      <section  style=\"margin-top:130px;\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n              <form (ngSubmit)=\"f.form.valid\" #f=\"ngForm\" novalidate>\n                <div class=\"row\">\n                  <h2 class=\"Dashboard_Heading mt-4\">Ticket Form</h2>\n                  <div class=\"Ticket_Form\">\n\n                    <!-- Mail_ID -->\n                    <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                      <mat-label>E-mail ID</mat-label>\n                      <input matInput placeholder=\"Enter your E-mail ID\"\n                      pattern=\".+@.+\\..+\" \n                      [(ngModel)]=\"model.email\"\n                      name=\"email\" #email=\"ngModel\"\n                      [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n                      required autocomplete=\"off\" /><br>\n                      <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.required\">Email is required</mat-error>\n                      <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.pattern\">Email must be a valid email address</mat-error>\n                  </mat-form-field>\n\n                  <!-- Subject Section -->\n                      <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                          <mat-label>Subject</mat-label>\n                          <input matInput placeholder=\"Subject\" class=\"matInputt\" \n                         \n                      [(ngModel)]=\"model.Subject\"\n                      name=\"Subject\" #Subject=\"ngModel\"\n                      [ngClass]=\"{ 'is-invalid': f.submitted && Subject.invalid }\"\n                      required autocomplete=\"off\" /><br>\n                      <mat-error *ngIf=\"Subject.invalid && f.submitted && Subject.errors?.required\">Subject is required</mat-error>\n                      <!-- <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.pattern\">Email must be a valid email address</mat-error> -->\n                  </mat-form-field>\n\n                      <!-- Message Section -->\n                      <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                          <mat-label>Leave Your Message Here</mat-label>\n                          <textarea matInput rows=\"4\" placeholder=\"Leave a comment\"\n                          \n                          [(ngModel)]=\"model.Message\"\n                          name=\"Message\" #Message=\"ngModel\"\n                          [ngClass]=\"{ 'is-invalid': f.submitted && Message.invalid }\"\n                          required autocomplete=\"off\"> </textarea><br>\n                          <mat-error *ngIf=\"Message.invalid && f.submitted && Message.errors?.required\">Message is required</mat-error>\n                          <!-- <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.pattern\">Email must be a valid email address</mat-error> -->\n                      </mat-form-field>\n\n                      <!-- Button -->\n                      <div class=\"col-lg-12 text-center\">\n                          <img src=\"assets/images/file.png\" alt=\"Upload\" class=\"Upload_Support_Ticket\">\n                      </div>\n                      <div class=\"text-center mt-4\">\n                        <button class=\"Support_Upload_Btn\">Submit</button>\n                      </div>\n                  </div>\n              </div>\n            </form>\n            </div>\n            <div class=\"col-lg-6\">\n              <h2 class=\"Dashboard_Heading mt-4\">Your Issue Ticket</h2>\n              <!-- <div class=\"row\"> -->\n                  <!-- <div class=\"col-lg-12\"> -->\n                      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 col-lg-12 text-center\">\n    \n                          <!--- Note that these columns can be defined in any order.\n                                The actual rendered columns are set as a property on the row definition\" -->\n                        \n                          <!-- Position Column -->\n                          <ng-container matColumnDef=\"position\">\n                            <th mat-header-cell *matHeaderCellDef> Date </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                          </ng-container>\n                        \n                          <!-- Name Column -->\n                          <ng-container matColumnDef=\"name\">\n                            <th mat-header-cell *matHeaderCellDef> Subject </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                          </ng-container>\n                        \n                          <!-- Weight Column -->\n                          <ng-container matColumnDef=\"weight\">\n                            <th mat-header-cell *matHeaderCellDef> Ticket No. </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                          </ng-container>\n                        \n                          <!-- Symbol Column -->\n                          <ng-container matColumnDef=\"symbol\">\n                            <th mat-header-cell *matHeaderCellDef> Status </th>\n                            <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'color':element.symbol === 'Closed' ? 'red' : 'green' }\"> {{element.symbol}} </td>\n                          </ng-container>\n                        \n                          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                        </table>\n                        \n                        \n                  <!-- </div> -->\n              <!-- </div> -->\n \n            </div>\n          </div>\n        </div>\n      </section>\n      <section>\n          <div class=\"container mt-4\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 text-center\">\n                <h5 class=\"copyright\" style=\"color:black;\">&copy;Copyright 2020 U2Admin. All rights reserved.</h5>\n              </div>\n            </div>\n          </div>\n        </section>\n"

/***/ }),

/***/ "./src/app/support/support.component.scss":
/*!************************************************!*\
  !*** ./src/app/support/support.component.scss ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "::ng-deep .mat-form-field-appearance-outline .mat-form-field-wrapper {\n  margin: 0em 0; }\n\n::ng-deep .mat-paginator-icon {\n  width: 28px;\n  fill: currentColor;\n  color: white;\n  border-radius: 50%;\n  background-color: #E72B90;\n  padding: 5px; }\n\n::ng-deep .mat-elevation-z8 {\n  box-shadow: 0 5px 5px -3px #ffffff, 0 8px 10px 1px #ffffff, 0 3px 14px 2px #ffffff; }\n\ntr.mat-header-row {\n  background-color: #0E1F70; }\n\nth.mat-header-cell {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: center; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL3N1cHBvcnQvc3VwcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWEsRUFDaEI7O0FBQ0Q7RUFDSSxZQUFXO0VBQ1gsbUJBQWtCO0VBQ2xCLGFBQVk7RUFDWixtQkFBa0I7RUFDbEIsMEJBQXlCO0VBQ3pCLGFBQVksRUFDZjs7QUFDRDtFQUNJLG1GQUFrRixFQUNyRjs7QUFDRDtFQUNJLDBCQUF5QixFQUUxQjs7QUFDRDtFQUNJLGVBQWM7RUFDZCxnQkFBZTtFQUNmLGlCQUFnQjtFQUNoQixtQkFDSixFQUFDIiwiZmlsZSI6InNyYy9hcHAvc3VwcG9ydC9zdXBwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMGVtIDA7XG59XG46Om5nLWRlZXAgLm1hdC1wYWdpbmF0b3ItaWNvbiB7XG4gICAgd2lkdGg6IDI4cHg7XG4gICAgZmlsbDogY3VycmVudENvbG9yO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3MkI5MDtcbiAgICBwYWRkaW5nOiA1cHg7XG59XG46Om5nLWRlZXAgLm1hdC1lbGV2YXRpb24tejgge1xuICAgIGJveC1zaGFkb3c6IDAgNXB4IDVweCAtM3B4ICNmZmZmZmYsIDAgOHB4IDEwcHggMXB4ICNmZmZmZmYsIDAgM3B4IDE0cHggMnB4ICNmZmZmZmY7XG59XG50ci5tYXQtaGVhZGVyLXJvd3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xuICAgIC8vIGNvbG9yOiAjZmZmZmZmO1xuICB9XG4gIHRoLm1hdC1oZWFkZXItY2VsbHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlclxuICB9Il19 */"

/***/ }),

/***/ "./src/app/support/support.component.ts":
/*!**********************************************!*\
  !*** ./src/app/support/support.component.ts ***!
  \**********************************************/
/*! exports provided: SupportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SupportComponent", function() { return SupportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ELEMENT_DATA = [
    { position: '29/2/2020', name: 'Selling Coin Error', weight: 'USD0011', symbol: 'Open' },
    { position: '2/3/2020', name: 'Upload Coin Error', weight: 'USD0012', symbol: 'Open' },
    { position: '8/1/2020', name: 'Login Error', weight: 'USD0013', symbol: 'Open' },
    { position: '3/2/2020', name: 'Profile Error', weight: 'USD0014', symbol: 'Closed' },
    { position: '24/10/2020', name: 'Upload Error', weight: 'USD0015', symbol: 'Open' },
    { position: '19/2/2020', name: 'Selling Coin Error', weight: 'USD0016', symbol: 'Closed' },
    { position: '9/12/2020', name: 'Buy Coin Error', weight: 'USD0017', symbol: 'Open' },
    { position: '2/2/2020', name: 'Login Error', weight: 'USD0018', symbol: 'Closed' },
];
var SupportComponent = /** @class */ (function () {
    function SupportComponent() {
        this.displayedColumns = ['position', 'name', 'weight', 'symbol'];
        this.dataSource = ELEMENT_DATA;
        this.model = {};
    }
    SupportComponent.prototype.ngOnInit = function () {
    };
    SupportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-support',
            template: __webpack_require__(/*! ./support.component.html */ "./src/app/support/support.component.html"),
            styles: [__webpack_require__(/*! ./support.component.scss */ "./src/app/support/support.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], SupportComponent);
    return SupportComponent;
}());



/***/ }),

/***/ "./src/app/user-panel/user-panel.module.ts":
/*!*************************************************!*\
  !*** ./src/app/user-panel/user-panel.module.ts ***!
  \*************************************************/
/*! exports provided: UserPanelModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserPanelModule", function() { return UserPanelModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _user_panel_routing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user-panel.routing */ "./src/app/user-panel/user-panel.routing.ts");
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dashboard/dashboard.component */ "./src/app/dashboard/dashboard.component.ts");
/* harmony import */ var _exchange_exchange_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../exchange/exchange.component */ "./src/app/exchange/exchange.component.ts");
/* harmony import */ var _send_receive_send_receive_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../send-receive/send-receive.component */ "./src/app/send-receive/send-receive.component.ts");
/* harmony import */ var _send_receivet_send_receivet_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../send-receivet/send-receivet.component */ "./src/app/send-receivet/send-receivet.component.ts");
/* harmony import */ var _your_profile_your_profile_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../your-profile/your-profile.component */ "./src/app/your-profile/your-profile.component.ts");
/* harmony import */ var _deposit_withdraw_deposit_withdraw_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../deposit-withdraw/deposit-withdraw.component */ "./src/app/deposit-withdraw/deposit-withdraw.component.ts");
/* harmony import */ var _support_support_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../support/support.component */ "./src/app/support/support.component.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm5/ngx-clipboard.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");













//External Section
// import { ToastrModule } from 'ngx-toastr';




var UserPanelModule = /** @class */ (function () {
    function UserPanelModule() {
    }
    UserPanelModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(_user_panel_routing__WEBPACK_IMPORTED_MODULE_5__["UserPanelRouter"]),
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ReactiveFormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatButtonModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatRippleModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatFormFieldModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatInputModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatPaginatorModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatChipsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatExpansionModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatSlideToggleModule"], _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatCheckboxModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatBadgeModule"], _angular_material_table__WEBPACK_IMPORTED_MODULE_15__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatTooltipModule"], _angular_material__WEBPACK_IMPORTED_MODULE_14__["MatIconModule"], ngx_clipboard__WEBPACK_IMPORTED_MODULE_13__["ClipboardModule"]
            ],
            declarations: [
                _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_6__["DashboardComponent"],
                _exchange_exchange_component__WEBPACK_IMPORTED_MODULE_7__["ExchangeComponent"],
                _send_receive_send_receive_component__WEBPACK_IMPORTED_MODULE_8__["SendReceiveComponent"],
                _send_receivet_send_receivet_component__WEBPACK_IMPORTED_MODULE_9__["SendReceivetComponent"],
                _your_profile_your_profile_component__WEBPACK_IMPORTED_MODULE_10__["YourProfileComponent"],
                _deposit_withdraw_deposit_withdraw_component__WEBPACK_IMPORTED_MODULE_11__["DepositWithdrawComponent"],
                _support_support_component__WEBPACK_IMPORTED_MODULE_12__["SupportComponent"],
            ]
        })
    ], UserPanelModule);
    return UserPanelModule;
}());



/***/ }),

/***/ "./src/app/user-panel/user-panel.routing.ts":
/*!**************************************************!*\
  !*** ./src/app/user-panel/user-panel.routing.ts ***!
  \**************************************************/
/*! exports provided: UserPanelRouter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserPanelRouter", function() { return UserPanelRouter; });
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dashboard/dashboard.component */ "./src/app/dashboard/dashboard.component.ts");
/* harmony import */ var _exchange_exchange_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../exchange/exchange.component */ "./src/app/exchange/exchange.component.ts");
/* harmony import */ var _send_receive_send_receive_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../send-receive/send-receive.component */ "./src/app/send-receive/send-receive.component.ts");
/* harmony import */ var _send_receivet_send_receivet_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../send-receivet/send-receivet.component */ "./src/app/send-receivet/send-receivet.component.ts");
/* harmony import */ var _your_profile_your_profile_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../your-profile/your-profile.component */ "./src/app/your-profile/your-profile.component.ts");
/* harmony import */ var _deposit_withdraw_deposit_withdraw_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../deposit-withdraw/deposit-withdraw.component */ "./src/app/deposit-withdraw/deposit-withdraw.component.ts");
/* harmony import */ var _support_support_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../support/support.component */ "./src/app/support/support.component.ts");







var UserPanelRouter = [
    {
        path: '',
        redirectTo: 'Dashboard',
        pathMatch: 'full',
    },
    { path: 'Dashboard', component: _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_0__["DashboardComponent"] },
    { path: 'Exchange', component: _exchange_exchange_component__WEBPACK_IMPORTED_MODULE_1__["ExchangeComponent"] },
    { path: 'Send', component: _send_receive_send_receive_component__WEBPACK_IMPORTED_MODULE_2__["SendReceiveComponent"] },
    { path: 'Receive', component: _send_receivet_send_receivet_component__WEBPACK_IMPORTED_MODULE_3__["SendReceivetComponent"] },
    { path: 'Settings', component: _your_profile_your_profile_component__WEBPACK_IMPORTED_MODULE_4__["YourProfileComponent"] },
    { path: 'Deposit', component: _deposit_withdraw_deposit_withdraw_component__WEBPACK_IMPORTED_MODULE_5__["DepositWithdrawComponent"] },
    { path: 'Support', component: _support_support_component__WEBPACK_IMPORTED_MODULE_6__["SupportComponent"] },
];


/***/ }),

/***/ "./src/app/your-profile/your-profile.component.html":
/*!**********************************************************!*\
  !*** ./src/app/your-profile/your-profile.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- New Code Change -->\n<section style=\"margin-top: 130px;\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <div class=\"Tab_Section\">\n                        <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                            <a class=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Profile Settings</a>\n                            <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Bank Settings</a>\n                            <a class=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-KYC\" role=\"tab\" aria-controls=\"nav-KYC\" aria-selected=\"false\">KYC</a>\n                            <!-- <a class=\"nav-item nav-link\" id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Contact</a> -->\n                        </div>\n                    </div>\n                </div>\n    \n            </div>\n        </div>\n\n        <div class=\"tab-content\" id=\"nav-tabContent\">\n            <!-- Bank Details Tab Starts -->\n            <div class=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-6 mb-4\">\n                                    <h2 class=\"Dashboard_Heading mt-4\">Add Bank Details</h2>\n                                    <div class=\"BankDetails\">\n                                        <!-- <div class=\"row \"> -->\n                                            <!-- <div class=\"col-lg-12\"> -->\n                                                <form (ngSubmit)=\"BankDetails.form.valid\" #BankDetails=\"ngForm\" novalidate>\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>Bank Name</mat-label>\n                                                            <input matInput placeholder=\"Bank Name\" class=\"matInputt\" \n                                                            minlength=\"3\" maxlength=\"50\" pattern=\"[a-zA-Z][a-zA-Z ]+[a-zA-Z]$\"\n                                                            [(ngModel)]=\"model.BankName\" \n                                                            name=\"BankName\" \n                                                            #BankName=\"ngModel\"\n                                                            [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BankName.invalid }\"\n                                                            required autocomplete=\"off\" \n                                                            >\n                                                            <mat-error *ngIf=\"BankName.invalid && BankDetails.submitted && BankName.errors?.required\">BankName is required</mat-error>\n                                                            <mat-error *ngIf=\"BankName.invalid && BankDetails.submitted && BankName.errors?.minlength\">minimum 3 characters</mat-error>\n                                                            <mat-error *ngIf=\"BankName.invalid && BankDetails.submitted && BankName.errors?.pattern\">Incorrect Bankname</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>Account Holder Name</mat-label>\n                                                            <input matInput placeholder=\"Holder Name\" class=\"matInputt\"\n                                                            autocomplete=\"off\" [(ngModel)]=\"model.HolderName\" pattern=\"[a-zA-Z]+[a-zA-Z]$\"\n                                                            name=\"HolderName\" \n                                                            #HolderName=\"ngModel\"\n                                                            [ngClass]=\"{ 'is-invalid': BankDetails.submitted && HolderName.invalid }\"\n                                                            required autocomplete=\"off\" \n                                                            >\n                                                            <mat-error *ngIf=\"HolderName.invalid && BankDetails.submitted && HolderName.errors?.required\">HolderName is required</mat-error>\n                                                            <mat-error *ngIf=\"HolderName.invalid && BankDetails.submitted && HolderName.errors?.minlength\">minimum 3 characters</mat-error>\n                                                            <mat-error *ngIf=\"HolderName.invalid && BankDetails.submitted && HolderName.errors?.pattern\">Characters only</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>Account Number</mat-label>\n                                                            <input matInput placeholder=\"Account Number\" class=\"matInputt\" \n                                                            autocomplete=\"off\" [(ngModel)]=\"model.AccountNumber\" pattern=\"[0-9]{0,20}\"\n                                                            name=\"AccountNumber\" \n                                                            #AccountNumber=\"ngModel\"\n                                                            [ngClass]=\"{ 'is-invalid': BankDetails.submitted && AccountNumber.invalid }\"\n                                                            required autocomplete=\"off\" \n                                                            >\n                                                            <mat-error *ngIf=\"AccountNumber.invalid && BankDetails.submitted && AccountNumber.errors?.required\">Account No. is required</mat-error>\n                                                            <mat-error *ngIf=\"AccountNumber.invalid && BankDetails.submitted && AccountNumber.errors?.minlength\">minimum 3 characters</mat-error>\n                                                            <mat-error *ngIf=\"AccountNumber.invalid && BankDetails.submitted && AccountNumber.errors?.pattern\">Invalid Account No. </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>IBNA/SWIFT Code</mat-label>\n                                                            <input matInput placeholder=\"Code\" class=\"matInputt\"\n                                                            autocomplete=\"off\" [(ngModel)]=\"model.Code\" \n                                                            name=\"Code\" \n                                                            #Code=\"ngModel\"\n                                                            [ngClass]=\"{ 'is-invalid': BankDetails.submitted && Code.invalid }\"\n                                                            required autocomplete=\"off\" \n                                                            >\n                                                            <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.required\">Code is required</mat-error>\n                                                            <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                                            <!-- <mat-error *ngIf=\"BankName.invalid && BankDetails.submitted && BankName.errors?.maxlength\">BankName should have maximum 20 characters</mat-error> -->\n                                                        </mat-form-field>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>Branch/City</mat-label>\n                                                            <input matInput placeholder=\"Branch/City\" class=\"matInputt\"\n                                                            autocomplete=\"off\" [(ngModel)]=\"model.BranchName\" pattern=\"[a-zA-Z][a-zA-Z ]+[a-zA-Z]$\"\n                                                            name=\"BranchName\" \n                                                            #BranchName=\"ngModel\"\n                                                            [ngClass]=\"{ 'is-invalid': BankDetails.submitted && BranchName.invalid }\"\n                                                            required autocomplete=\"off\" \n                                                            >\n                                                            <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.required\">BranchName is required</mat-error>\n                                                            <!-- <mat-error *ngIf=\"Code.invalid && BankDetails.submitted && Code.errors?.minlength\">minimum 3 characters</mat-error> -->\n                                                            <mat-error *ngIf=\"BranchName.invalid && BankDetails.submitted && BranchName.errors?.pattern\">BranchName Incorrect</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-lg-6 mt-2\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                            <mat-label>Select Your Country</mat-label>\n                                                            <mat-select required matInput #Bank_Country=\"ngModel\"\n                                                                name=\"Bank_Country\" [(ngModel)]=\"BankDetails.Bank_Country\">\n                                                                <mat-option>None</mat-option>\n                                                                <mat-option value=\"option1\">India</mat-option>\n                                                                <mat-option value=\"option2\">Australia</mat-option>\n                                                                <mat-option value=\"option3\">Asia</mat-option>\n                                                            </mat-select>\n                                                            <mat-error *ngIf=\"Bank_Country.errors && (Bank_Country.dirty || Bank_Country.touched || submitted)\">\n                                                                <span [hidden]=\"!Bank_Country.errors.required\" class=\"error\"\n                                                                translate>Please select option </span>\n                                                                </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                </div>\n                                                <div class=\"row\">\n                                                    <div class=\"col-lg-12\">\n                                                            <div class=\"text-center\">\n                                                                <button class=\"DashboardBtn\">Update</button>\n                                                            </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                            <!-- </div> -->\n                                        <!-- </div> -->\n        \n                                    </div>\n                                </div>\n                                <div class=\"col-lg-6 mb-4\">\n                                    <h2 class=\"Dashboard_Heading mt-4\">Bank Details</h2>\n                                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 col-lg-12\" style=\"    height: 330px;\">\n        \n                                        <!--- Note that these columns can be defined in any order.\n                                                  The actual rendered columns are set as a property on the row definition\" -->\n        \n                                        <!-- Position Column -->\n                                        <ng-container matColumnDef=\"position\">\n                                            <th mat-header-cell *matHeaderCellDef> No. </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                                        </ng-container>\n        \n                                        <!-- Name Column -->\n                                        <ng-container matColumnDef=\"name\">\n                                            <th mat-header-cell *matHeaderCellDef> Bank Name </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                        </ng-container>\n        \n                                        <!-- Weight Column -->\n                                        <ng-container matColumnDef=\"weight\">\n                                            <th mat-header-cell *matHeaderCellDef> Account Number </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                        </ng-container>\n        \n                                        <!-- Symbol Column -->\n                                        <!-- <ng-container matColumnDef=\"symbol\">\n                                            <th mat-header-cell *matHeaderCellDef> IFSC Code </th>\n                                            <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                        </ng-container> -->\n        \n                                        <!-- Symbol Column -->\n                                        <ng-container matColumnDef=\"View\">\n                                            <th mat-header-cell *matHeaderCellDef> View </th>\n                                            <td mat-cell *matCellDef=\"let element\">\n                                                <mat-icon>{{element.View}}</mat-icon>\n                                            </td>\n                                        </ng-container>\n        \n        \n                                        <!-- Symbol Column -->\n                                        <ng-container matColumnDef=\"Delete\">\n                                            <th mat-header-cell *matHeaderCellDef> Delete </th>\n                                            <td mat-cell *matCellDef=\"let element\">\n                                                <mat-icon>{{element.Delete}}</mat-icon>\n                                            </td>\n                                        </ng-container>\n        \n                                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                    </table>\n        \n        \n                                </div>\n                       \n                     \n                    </div>      \n                </div>\n            </div>\n    \n            <!-- Bank Details Tab End -->\n    \n    \n    \n            <!-- User Profils Tab Start  -->\n    \n            <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n               <div class=\"container-fluid\">\n                   <div class=\"row\">\n                        <div class=\"col-lg-12 mt-4\">\n                                <!-- <h2 class=\"Dashboard_Heading mt-4\" style=\"margin-left:112px;\">Your's Profile</h2> -->\n                                <div class=\"Your_Profile_Update\">\n                                    <p class=\"text-center Profile_Heading\">Edit Your Profile Settings</p>\n                                    <!-- Form Section Start -->\n                                    <form (ngSubmit)=\"f.form.valid\" #f=\"ngForm\" novalidate>\n                                        <div class=\"row\"> \n                                            <div class=\"text-center col-lg-6\">\n                                                <img src=\"assets/images/Avator.png\" alt=\"\" width=\"28%\" class=\"ImgHover\">\n                                            </div>\n                                    \n                                            <!-- Name -->\n                                            <div class=\"col-lg-6\">\n                                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                    <mat-label>First Name</mat-label>\n                                                    <input matInput placeholder=\"Enter Your Name\"\n                                                    minlength=\"4\" maxlength=\"50\"\n                                                    [(ngModel)]=\"model.firstname\" \n                                                    name=\"firstname\" \n                                                    #firstname=\"ngModel\"\n                                                    [ngClass]=\"{ 'is-invalid': f.submitted && firstname.invalid }\"\n                                                    required autocomplete=\"off\" \n                                                    ><br>\n                                                    <mat-error *ngIf=\"firstname.invalid && f.submitted && firstname.errors?.required\">firstname is required</mat-error>\n                                                    <mat-error *ngIf=\"firstname.invalid && f.submitted && firstname.errors?.minlength\">firstname should have minimum 4 characters</mat-error>\n                                                    <mat-error *ngIf=\"firstname.invalid && f.submitted && firstname.errors?.maxlength\">firstname should have maximum 20 characters</mat-error>\n                                                </mat-form-field>\n                                            <!-- </div> -->\n                                                       <!-- Phone Number -->\n                                            <!-- <div class=\"col-lg-6\"> -->\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>Last Name</mat-label>\n                                                        <input matInput placeholder=\"Enter Your Phone No\"\n                                                        minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.PhoneNumber\" \n                                                        pattern=\"[7-9]{1}[0-9]{9}\"\n                                                        name=\"PhoneNumber\" \n                                                        #PhoneNumber=\"ngModel\"\n                                                        [ngClass]=\"{ 'is-invalid': f.submitted && PhoneNumber.invalid }\"\n                                                        required autocomplete=\"off\" \n                                                        >\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.required\">Phone No. is required</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.pattern\">Check Your Number </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                           \n                                            \n            \n                                            <!-- Phone Number -->\n                                            <div class=\"col-lg-6\">\n                                                <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                    <mat-label>Phone No</mat-label>\n                                                    <input matInput placeholder=\"Enter Your Phone No\"\n                                                    minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.PhoneNumber\" \n                                                    pattern=\"[7-9]{1}[0-9]{9}\"\n                                                    name=\"PhoneNumber\" \n                                                    #PhoneNumber=\"ngModel\"\n                                                    [ngClass]=\"{ 'is-invalid': f.submitted && PhoneNumber.invalid }\"\n                                                    required autocomplete=\"off\" \n                                                    >\n                                                    <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.required\">Phone No. is required</mat-error>\n                                                    <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                    <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.pattern\">Check Your Number </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            \n                                                  <!-- Mail_ID -->\n                                                  <div class=\"col-lg-6\">\n                                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                                <mat-label>E-mail ID</mat-label>\n                                                                <input matInput placeholder=\"Enter your E-mail ID\"\n                                                                pattern=\".+@.+\\..+\" \n                                                                [(ngModel)]=\"model.email\"\n                                                                name=\"email\" #email=\"ngModel\"\n                                                                [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"\n                                                                required autocomplete=\"off\" /><br>\n                                                                <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.required\">Email is required</mat-error>\n                                                                <mat-error *ngIf=\"email.invalid && f.submitted && email.errors?.pattern\">Email must be a valid email address</mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n\n                                            \n\n                                             <!-- Address -->\n                                             <div class=\"col-lg-12\">\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>Address</mat-label>\n                                                        <textarea matInput placeholder=\"Address\"\n                                                        [(ngModel)]=\"model.Address\"\n                                                        name=\"Address\" rows=\"5\"\n                                                        #Address=\"ngModel\"\n                                                        [ngClass]=\"{ 'is-invalid': f.submitted && Address.invalid }\"\n                                                        required autocomplete=\"off\" \n                                                        ></textarea>\n                                                        <mat-error *ngIf=\"Address.invalid && f.submitted && Address.errors?.required\">Address is required</mat-error>\n                                                        <!-- <mat-error *ngIf=\"Address.invalid && f.submitted && Address.errors?.minlength\">Phone No. should have 10 digits</mat-error> -->\n                                                        <!-- <mat-error *ngIf=\"Address.invalid && f.submitted && Address.errors?.pattern\">Check Your Number </mat-error> -->\n                                                    </mat-form-field>\n                                                </div>\n\n                                                   <!-- City -->\n                                            <div class=\"col-lg-6\">\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>City</mat-label>\n                                                        <input matInput placeholder=\"Enter Your Phone No\"\n                                                        minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.PhoneNumber\" \n                                                        pattern=\"[7-9]{1}[0-9]{9}\"\n                                                        name=\"PhoneNumber\" \n                                                        #PhoneNumber=\"ngModel\"\n                                                        [ngClass]=\"{ 'is-invalid': f.submitted && PhoneNumber.invalid }\"\n                                                        required autocomplete=\"off\" \n                                                        >\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.required\">Phone No. is required</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.pattern\">Check Your Number </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                             \n\n                                                 <!-- State -->\n                                            <div class=\"col-lg-6\">\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>State</mat-label>\n                                                        <input matInput placeholder=\"Enter Your Phone No\"\n                                                        minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.PhoneNumber\" \n                                                        pattern=\"[7-9]{1}[0-9]{9}\"\n                                                        name=\"PhoneNumber\" \n                                                        #PhoneNumber=\"ngModel\"\n                                                        [ngClass]=\"{ 'is-invalid': f.submitted && PhoneNumber.invalid }\"\n                                                        required autocomplete=\"off\" \n                                                        >\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.required\">Phone No. is required</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.pattern\">Check Your Number </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n                                              \n                                                <!-- Country -->\n                                            <div class=\"col-lg-6 \">\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>Select Your Country</mat-label>\n                                                        <mat-select required matInput #Country=\"ngModel\"\n                                                            name=\"Country\" [(ngModel)]=\"f.Country\">\n                                                            <mat-option>None</mat-option>\n                                                            <mat-option value=\"option1\">India</mat-option>\n                                                            <mat-option value=\"option2\">Australia</mat-option>\n                                                            <mat-option value=\"option3\">Asia</mat-option>\n                                                        </mat-select>\n                                                        <mat-error *ngIf=\"Country.errors && (Country.dirty || Country.touched || submitted)\">\n                                                            <span [hidden]=\"!Country.errors.required\" class=\"error\"\n                                                            translate>Please select option </span>\n                                                            </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                                    <!-- PINCODE Number -->\n                                            <div class=\"col-lg-6\">\n                                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                                        <mat-label>PINCODE</mat-label>\n                                                        <input matInput placeholder=\"Enter Your Phone No\"\n                                                        minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.PhoneNumber\" \n                                                        pattern=\"[7-9]{1}[0-9]{9}\"\n                                                        name=\"PhoneNumber\" \n                                                        #PhoneNumber=\"ngModel\"\n                                                        [ngClass]=\"{ 'is-invalid': f.submitted && PhoneNumber.invalid }\"\n                                                        required autocomplete=\"off\" \n                                                        >\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.required\">Phone No. is required</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                        <mat-error *ngIf=\"PhoneNumber.invalid && f.submitted && PhoneNumber.errors?.pattern\">Check Your Number </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n                                           \n                                        </div>\n                                        <div class=\"text-center\">\n                                            <button type=\"submit\" class=\"DashboardBtn\">Update</button>\n                                        </div>\n                                    </form>\n                                    <!-- Form Section End -->\n                                </div>\n                            </div>\n            \n                         <!-- Change Password Section -->\n                           <!-- Change Password Section -->\n                           <div class=\"col-lg-6 mt-4\">\n                                <!-- <h2 class=\"Dashboard_Heading mt-4\">Change Password</h2> -->\n                                <div class=\"Profile_Change_Password\">\n                                        <p class=\"text-center Profile_Heading\">Change Password</p>\n                                    <!-- Form Section Start -->\n                                    <form [formGroup]=\"myForm\">\n            \n                                    <!-- Old Password -->\n                                    <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                            <mat-label>Old Password</mat-label>\n                                            <input matInput placeholder=\"Old password\" formControlName=\"Old_password\" [type]=\"OldPassword ? 'password' : 'text'\" required>\n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"OldPassword = !OldPassword\">{{OldPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                            <mat-error *ngIf=\"myForm.hasError('required', 'Old_password')\">\n                                                Please enter your Old Password\n                                            </mat-error>\n                                            <!-- <input matInput placeholder=\"New Password\" autocomplete=\"off\" [type]=\"NewPassword ? 'password' : 'text'\"\n                                            name=\"Old_Password\" \n                                            [(ngModel)]=\"model.Old_Password\" #Old_Password=\"ngModel\" \n                                            [ngClass]=\"{ 'is-invalid': myForm.submitted && Old_Password.invalid }\" \n                                            required autocomplete=\"off\" />\n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"NewPassword = !NewPassword\">{{NewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                \n                                            <mat-error *ngIf=\"Old_Password.invalid && myForm.submitted && (Old_Password.errors?.minlength || Old_Password.errors?.pattern)\">* 8 Characters one Uppercase, Lowercase, Special Characters, Number </mat-error>\n                                            <mat-error *ngIf=\"Old_Password.invalid && myForm.submitted && Old_Password.errors?.required\"> New Password is required!</mat-error>\n                                             -->\n                                        </mat-form-field>\n                                    <!-- <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                        <mat-label>Old Password</mat-label>\n                                        <input matInput placeholder=\"Old Password\" class=\"matInputt\" autocomplete=\"off\" [type]=\"OldPassword ? 'password' : 'text'\"\n                                        name=\"Old_Password\" \n                                        [(ngModel)]=\"model.Old_Password\" #Old_Password=\"ngModel\" \n                                        [ngClass]=\"{ 'is-invalid': f.submitted && Old_Password.invalid }\" \n                                        required autocomplete=\"off\" />\n                                        <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"OldPassword = !OldPassword\">{{OldPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    \n                                        <mat-error *ngIf=\"Old_Password.invalid && ChangePassword.submitted && Old_Password.errors?.required\"> Confirm Password is required!</mat-error>\n                                        <mat-error *ngIf=\"ChangePassword.submitted && pass.value != cpass.value && !cpass.errors?.required\">Password does not match password confirmation.</mat-error>\n                                       \n                                    </mat-form-field> -->\n            \n                                    <!-- New Password -->\n                                    <!-- <div formGroupName=\"matching_passwords\"> -->\n                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                            <mat-label>New Password</mat-label>\n                                            <input matInput placeholder=\"New password\"\n                                            pattern=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\"\n                                            formControlName=\"password\" required autocomplete=\"off\" [type]=\"NewPassword ? 'password' : 'text'\">\n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"NewPassword = !NewPassword\">{{NewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                            <mat-error *ngIf=\"myForm.hasError('required', 'password')\">\n                                                Please enter your newpassword\n                                            </mat-error>\n                                            <mat-error *ngIf=\"myForm.hasError('pattern', 'password')\">\n                                             Uppercase, Lowercase, Number and 8 Characters\n                                            </mat-error>\n                                            <!-- <input matInput placeholder=\"New Password\" autocomplete=\"off\" [type]=\"NewPassword ? 'password' : 'text'\"\n                                            name=\"New_Password\" formControlName=\"password\" pattern=\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\"\n                                            [(ngModel)]=\"model.New_Password\" #New_Password=\"ngModel\" maxlength=\"20\" minlength=\"8\"\n                                            [ngClass]=\"{ 'is-invalid': f.submitted && New_Password.invalid }\" \n                                            required autocomplete=\"off\" />\n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"NewPassword = !NewPassword\">{{NewPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                \n                                            <mat-error *ngIf=\"New_Password.invalid && ChangePassword.submitted && (New_Password.errors?.minlength || New_Password.errors?.pattern)\">* 8 Characters one Uppercase, Lowercase, Special Characters, Number </mat-error>\n                                            <mat-error *ngIf=\"New_Password.invalid && ChangePassword.submitted && New_Password.errors?.required\"> New Password is required!</mat-error> -->\n                                            <!-- <mat-error *ngIf=\"New_Password.invalid && ChangePassword.submitted && New_Password.errors?.minlength\">Password should have </mat-error> -->\n                                        </mat-form-field>\n                                    <!-- </div> -->\n                                    \n            \n                                    <!-- Confirm Password -->\n                                    <!-- <div class=\"form-group\"> -->\n                                        <mat-form-field appearance=\"outline\" class=\"col-lg-12\">\n                                            <mat-label>Confirm Password</mat-label>\n                                            <input matInput placeholder=\"Confirm password\" formControlName=\"confirmPassword\" [errorStateMatcher]=\"matcher\" required autocomplete=\"off\" [type]=\"ConfirmPassword ? 'password' : 'text'\">\n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"ConfirmPassword = !ConfirmPassword\">{{ConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                          <mat-error *ngIf=\"myForm.hasError('notSame') || myForm.hasError('required' , 'confirmPassword')\">PAssword do not match\n                                          </mat-error>\n                                            <!-- <input matInput placeholder=\"Old Password\" autocomplete=\"off\" [type]=\"ConfirmPassword ? 'password' : 'text'\"\n                                            name=\"Confirm_Password\"\n                                            [(ngModel)]=\"model.Confirm_Password\" #Confirm_Password=\"ngModel\" \n                                            [ngClass]=\"{ 'is-invalid': ChangePassword.submitted && Confirm_Password.invalid }\" \n                                            required autocomplete=\"off\"/>                            \n                                            <mat-icon style=\"cursor:pointer\" matSuffix (click)=\"ConfirmPassword = !ConfirmPassword\">{{ConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n            \n                                            <mat-error *ngIf=\"Confirm_Password.invalid && ChangePassword.submitted && Confirm_Password.errors?.required\"> Confirm Password is required!</mat-error>\n                                            <mat-error *ngIf=\"ChangePassword.submitted && NewPassword.value != Confirm_Password.value && !Confirm_Password.errors?.required\">Password does not match password confirmation.</mat-error> -->\n                                        </mat-form-field>\n                                    <!-- </div> -->\n            \n                                        <!-- <mat-form-field>\n                                            <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" (input)=\"onPasswordInput()\">\n                                            <mat-error *ngIf=\"password.hasError('required')\">Password is required</mat-error>\n                                            <mat-error *ngIf=\"password.hasError('minlength')\">Password must have at least {{minPw}} characters</mat-error>\n                                        </mat-form-field>\n                                    \n                                        <mat-form-field>\n                                            <input matInput type=\"password\" placeholder=\"Confirm password\" formControlName=\"password2\" (input)=\"onPasswordInput()\">\n                                            <mat-error *ngIf=\"password2.hasError('required')\">Please confirm your password</mat-error>\n                                            <mat-error *ngIf=\"password2.invalid && !password2.hasError('required')\">Passwords don't match</mat-error>\n                                        </mat-form-field> -->\n            \n                                    <!-- Button Section -->\n                                    <div class=\"text-center mt-2\" style=\"margin-top: 0px;\">\n                                        <button type=\"submit\" class=\"DashboardBtn\" (click)=\"checkPasswords()\" >Save Changes</button>\n                                    </div>\n                                </form>\n                                <!-- Form Section End -->\n                                </div>\n            \n                            </div>\n\n                            \n                            <div class=\"col-lg-6 mt-4\">\n                                    <!-- <h2 class=\"Dashboard_Heading mt-4\"></h2> -->\n                                    <div class=\"Exchange_Notification\">\n                                            <p class=\"text-center Profile_Heading\">Change Password</p>\n                                    \n                                           \n                                                <div class=\"row\">\n                                                       \n                                                    <div class=\"col-lg-12\">\n                                                            <p>Security Alerts</p>\n                                                            <ul>\n                                                                <li>TFA\n                                                                    <a class=\"pull-right\">\n                                                                        <mat-slide-toggle></mat-slide-toggle>\n                                                                    </a>\n                                                                </li>\n                                                                <li>Login Email Alerts\n                                                                    <a class=\"pull-right\">\n                                                                        <mat-slide-toggle></mat-slide-toggle>\n                                                                    </a>\n                                                                </li>\n                                                            </ul>\n                                                    </div>\n                                                  <div class=\"col-lg-12\">\n                                                        <p>Manage Notification</p>\n                                                        <ul>\n                                                            <li>Change Password\n                                                                <a class=\"pull-right\">\n                                                                    <mat-slide-toggle></mat-slide-toggle>\n                                                                </a>\n                                                            </li>\n                                                            <li>Deposit Fund\n                                                                <a class=\"pull-right\">\n                                                                    <mat-slide-toggle></mat-slide-toggle>\n                                                                </a>\n                                                            </li>\n                                                            <li>SMS Notification\n                                                                <a class=\"pull-right\">\n                                                                    <mat-slide-toggle></mat-slide-toggle>\n                                                                </a>\n                                                            </li>\n                                                        </ul>\n                                                  </div>\n                                                    <!-- <ui-switch checked></ui-switch> -->\n                            \n                                                    \n                                                </div>\n                                    </div>\n                \n                                </div>\n\n                \n\n                       \n                   </div>\n               </div>\n            </div>\n            <!-- User Tab Ends -->\n\n\n\n            <!-- KYC Tab Starts -->\n            <div class=\"tab-pane fade\" id=\"nav-KYC\" role=\"tabpanel\" aria-labelledby=\"nav-KYC-tab\">\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                            <div class=\"col-lg-12 \">\n                                    <div class=\"KYCDESC mt-4\">\n                                    <h5>Please make sure below :</h5>\n                                    <ul style=\"list-style-type :circle; padding-left:15px;\">\n                                        <li>ID Proof like Driving Licence, Residence, Passport </li>\n                                        <li>ID Must not be Expired</li>\n                                        <li>Doucment should be clear and visiable</li>\n                                        <li>Goverment approved ID only Accpeted</li>\n                                        <li>Upload both Front & Back side of ID Proof</li>\n                                    </ul>\n                                </div>\n                                </div>\n                                <div class=\"col-lg-12\">\n                                    <form (ngSubmit)=\"BankDetails.form.valid\" #KYC=\"ngForm\" novalidate>\n                                        <div class=\"KYCProof mt-4\">\n                                                <p class=\"text-center Profile_Heading\">ID Proof</p>\n                                            <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                                <mat-label>Select Your ID Proof</mat-label>\n                                                <mat-select required matInput #ID=\"ngModel\"\n                                                    name=\"ID\" [(ngModel)]=\"KYC.ID\">\n                                                    <mat-option>None</mat-option>\n                                                    <mat-option value=\"option1\">Passport</mat-option>\n                                                    <mat-option value=\"option2\">Licence</mat-option>\n                                                    <mat-option value=\"option3\">Voter ID</mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"ID.errors && (ID.dirty || ID.touched || submitted)\">\n                                                    <span [hidden]=\"!ID.errors.required\" class=\"error\"\n                                                    translate>Please select option </span>\n                                                    </mat-error>\n                                            </mat-form-field>\n    \n                                            <mat-form-field appearance=\"outline\" class=\"col-lg-6\">\n                                                <mat-label>ID Number</mat-label>\n                                                <input matInput placeholder=\"Enter Your ID Number\"\n                                                minlength=\"10\" maxlength=\"10\" [(ngModel)]=\"model.IDNumber\" \n                                                pattern=\"[7-9]{1}[0-9]{9}\"\n                                                name=\"IDNumber\" \n                                                #IDNumber=\"ngModel\"\n                                                [ngClass]=\"{ 'is-invalid': f.submitted && IDNumber.invalid }\"\n                                                required autocomplete=\"off\" \n                                                >\n                                                <mat-error *ngIf=\"IDNumber.invalid && f.submitted && IDNumber.errors?.required\">Phone No. is required</mat-error>\n                                                <mat-error *ngIf=\"IDNumber.invalid && f.submitted && IDNumber.errors?.minlength\">Phone No. should have 10 digits</mat-error>\n                                                <mat-error *ngIf=\"IDNumber.invalid && f.submitted && IDNumber.errors?.pattern\">Check Your Number </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div class=\"col-lg-6 mt-4 mb-4 \">\n                                        <div class=\"KYCDESC\">\n                                            <div>\n                                                <p class=\"pull-left\">Your Selfie</p>\n                                                <p class=\"pull-right\" style=\"color: red\">Pending</p>\n                                            </div>\n                                            <div class=\"text-center UploadImg\">\n                                                <img src=\"assets/images/1200px-Add_user_icon_(blue).png\" class=\"\" alt=\"app-dashboard-header\">\n                                                <p class=\"KYC_Desc\">Your Selfie will help us to make sure that we delivery to the right Person</p>\n                                                <button class=\"KYC_Upload\">Upload</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-lg-6 mt-4 mb-4\">\n                                        <div class=\"KYCDESC\">\n                                            <div>\n                                                <p class=\"pull-left\">Your Selfie</p>\n                                                <p class=\"pull-right\" style=\"color: red\">Pending</p>\n                                            </div>\n                                            <div class=\"text-center UploadImg\">\n                                                <img src=\"assets/images/file.png\" alt=\"app-dashboard-header\">\n                                                <img src=\"assets/images/file.png\" alt=\"app-dashboard-header\" style=\"margin-left:5px;\">\n                                                <p class=\"KYC_Desc1\">Your Selfie will help us to make sure that we delivery to the right Person</p>\n                                                <button class=\"KYC_Upload\">Upload</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                    </div>\n                </div>\n            </div>\n            <!-- KYC Tab Ends -->\n        </div>\n\n    \n    </section>\n\n\n"

/***/ }),

/***/ "./src/app/your-profile/your-profile.component.scss":
/*!**********************************************************!*\
  !*** ./src/app/your-profile/your-profile.component.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "::ng-deep .mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 15px 0px 12px 1px; }\n\nul {\n  list-style-type: none;\n  padding-left: 0px; }\n\n.matInputt {\n  border-radius: 50px; }\n\nli {\n  padding: 6px;\n  color: gray; }\n\n::ng-deep .mat-form-field-infix {\n  display: block;\n  position: relative;\n  -webkit-box-flex: 1;\n          flex: auto;\n  min-width: 0;\n  width: 150px !important; }\n\nmat-label {\n  font-size: 14px;\n  font-weight: bold;\n  color: #0E1F70; }\n\n::ng-deep .mat-select-arrow {\n  color: #ffffff; }\n\n.avatar-upload .avatar-edit input {\n  display: none; }\n\n.avatar-preview {\n  width: 200px;\n  height: 200px;\n  position: relative;\n  border-radius: 100%;\n  overflow: hidden;\n  border: 12px solid #fff;\n  box-shadow: 0 0 45px rgba(0, 0, 0, 0.2); }\n\n.avatar-preview > div {\n  width: 100%;\n  height: 100%;\n  border-radius: 100%;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center; }\n\n.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {\n  color: #0E1F70;\n  font-weight: 700;\n  margin-top: 8px;\n  border: 1px solid #0E1F70;\n  background-color: #E72B90; }\n\n.nav-link:hover {\n  background-color: #E72B90;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item .nav-link, .nav-tabs {\n  color: #0E1F70;\n  font-size: 16px;\n  margin-top: 8px;\n  border-bottom: 1px solid transparent;\n  font-weight: 700; }\n\n.nav-link {\n  background-color: #ffffff;\n  border: 1px solid #0E1F70; }\n\n.nav-tabs .nav-item {\n  color: #0E1F70;\n  margin-top: 8px;\n  border-radius: 10px; }\n\n.nav-tabs .nav-item:not(:first-child) {\n  margin-left: 10px; }\n\n.Tab_Section {\n  height: 56px;\n  margin-top: 28px; }\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #E72B90; }\n\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #E72B90; }\n\n::ng-deep tr.mat-row:hover td {\n  color: #ffffff;\n  background-color: #0E1F70; }\n\n::ng-deep .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0 0px 15px 0px #E72B90; }\n\n@media only screen and (max-width: 600px) {\n  .BankDetails {\n    height: auto; }\n  .Profile_Change_Password, .Your_Profile_Update, .Exchange_Notification {\n    height: auto; }\n  td.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n    font-size: 13px; }\n  .ImgHover {\n    margin-top: -100px;\n    margin-left: -340px; } }\n\n@media only screen and (min-width: 1400px) {\n  .ImgHover {\n    margin-top: -100px;\n    margin-left: -327px; } }\n\nmat-error {\n  font-size: 13px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvVTJBRE1JTkdJVC9zcmMvYXBwL3lvdXItcHJvZmlsZS95b3VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBMEIsRUFDN0I7O0FBQ0Q7RUFDSSxzQkFBcUI7RUFDckIsa0JBQWlCLEVBQ3BCOztBQUNEO0VBQ0ksb0JBQW1CLEVBQ3RCOztBQUNEO0VBQ0ksYUFBWTtFQUFFLFlBQVcsRUFDNUI7O0FBQ0Q7RUFDSSxlQUFjO0VBQ2QsbUJBQWtCO0VBQ2xCLG9CQUFVO1VBQVYsV0FBVTtFQUNWLGFBQVk7RUFDWix3QkFBdUIsRUFDMUI7O0FBQ0Q7RUFDSSxnQkFBZTtFQUNmLGtCQUFpQjtFQUNqQixlQUFjLEVBQ2pCOztBQUNEO0VBQ0ksZUFBYyxFQUNqQjs7QUFFRDtFQUNJLGNBQWEsRUFDZDs7QUFDRDtFQUNFLGFBQVk7RUFDWixjQUFhO0VBQ2IsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFQUNuQixpQkFBZ0I7RUFDaEIsd0JBQXVCO0VBR3ZCLHdDQUFzQyxFQUN2Qzs7QUFFRDtFQUNFLFlBQVc7RUFDWCxhQUFZO0VBQ1osb0JBQW1CO0VBQ25CLHVCQUFzQjtFQUN0Qiw2QkFBNEI7RUFDNUIsNEJBQTJCLEVBQzVCOztBQUVEO0VBRUUsZUFBYztFQUNkLGlCQUFnQjtFQUNoQixnQkFBZTtFQUNmLDBCQUF5QjtFQUd6QiwwQkFBeUIsRUFDMUI7O0FBQ0Q7RUFHRSwwQkFBeUI7RUFDekIsMEJBQXlCLEVBQzFCOztBQUNEO0VBQ0UsZUFBYztFQUVkLGdCQUFlO0VBQ2YsZ0JBQWU7RUFDZixxQ0FBb0M7RUFDcEMsaUJBQWdCLEVBQ2pCOztBQUNEO0VBQ0ksMEJBQXlCO0VBQ3pCLDBCQUF5QixFQUM1Qjs7QUFDRDtFQUNJLGVBQWM7RUFBQyxnQkFBZTtFQUM5QixvQkFBbUIsRUFDdEI7O0FBQ0Q7RUFDSSxrQkFBaUIsRUFDcEI7O0FBRUQ7RUFFSSxhQUFZO0VBQ1osaUJBQWdCLEVBQ25COztBQUVEO0VBQ0UsZUFBYyxFQUNqQjs7QUFFRDtFQUNFLGVBQWMsRUFDZjs7QUFDRDtFQUNFLGVBQWM7RUFBQywwQkFBeUIsRUFDekM7O0FBQ0Q7RUFDRSxtQ0FBa0MsRUFDbkM7O0FBQ0Q7RUFDSTtJQUNBLGFBQVksRUFDWDtFQUNEO0lBQ0ksYUFBWSxFQUNmO0VBQ0Q7SUFDSSxnQkFBZSxFQUNsQjtFQUNEO0lBQ0ksbUJBQWtCO0lBQ2xCLG9CQUFtQixFQUN0QixFQUFBOztBQUlMO0VBQ0E7SUFDSSxtQkFBa0I7SUFDbEIsb0JBQW1CLEVBQ2xCLEVBQUE7O0FBRUw7RUFDSSxnQkFBZSxFQUNsQiIsImZpbGUiOiJzcmMvYXBwL3lvdXItcHJvZmlsZS95b3VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZSAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICAgIHBhZGRpbmc6IDE1cHggMHB4IDEycHggMXB4O1xufVxudWx7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xufVxuLm1hdElucHV0dHtcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xufVxubGl7XG4gICAgcGFkZGluZzogNnB4OyBjb2xvcjogZ3JheTtcbn1cbjo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbGV4OiBhdXRvO1xuICAgIG1pbi13aWR0aDogMDtcbiAgICB3aWR0aDogMTUwcHggIWltcG9ydGFudDtcbn1cbm1hdC1sYWJlbHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgY29sb3I6ICMwRTFGNzA7XG59XG46Om5nLWRlZXAgLm1hdC1zZWxlY3QtYXJyb3cge1xuICAgIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4uYXZhdGFyLXVwbG9hZCAuYXZhdGFyLWVkaXQgaW5wdXQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmF2YXRhci1wcmV2aWV3IHtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiAyMDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJvcmRlcjogMTJweCBzb2xpZCAjZmZmO1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDQ1cHggcmdiYSgwLCAwLCAwLCAuMik7XG4gICAgLW1vei1ib3gtc2hhZG93OiAwIDAgNDVweCByZ2JhKDAsIDAsIDAsIC4yKTtcbiAgICBib3gtc2hhZG93OiAwIDAgNDVweCByZ2JhKDAsIDAsIDAsIC4yKTtcbiAgfVxuICBcbiAgLmF2YXRhci1wcmV2aWV3PmRpdiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxuXG4gIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssIC5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcbiAgICAvLyBiYWNrZ3JvdW5kOiBtb2NjYXNpbjtcbiAgICBjb2xvcjogIzBFMUY3MDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICAgIC8vIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZmZmZjtib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZmZmZjtib3JkZXItbGVmdDogMXB4IHNvbGlkICNmZmZmO1xuICAgIC8vIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMEUxRjcwIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTcyQjkwO1xuICB9XG4gIC5uYXYtbGluazpob3ZlcntcbiAgICAvLyBib3JkZXItdG9wOiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2ZmZmY7Ym9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZmZmZjtcbiAgICAvLyBib3JkZXItYm90dG9tOiAycHggc29saWQgIzBFMUY3MCFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U3MkI5MDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW0gLm5hdi1saW5rLCAubmF2LXRhYnN7XG4gICAgY29sb3I6ICMwRTFGNzA7XG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICB9XG4gIC5uYXYtbGlua3tcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMEUxRjcwO1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW17XG4gICAgICBjb2xvcjogIzBFMUY3MDttYXJnaW4tdG9wOiA4cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICB9XG4gIC5uYXYtdGFicyAubmF2LWl0ZW06bm90KDpmaXJzdC1jaGlsZCl7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG4gIC5UYWJfU2VjdGlvbntcbiAgICAvLyAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICBoZWlnaHQ6IDU2cHg7XG4gICAgICBtYXJnaW4tdG9wOiAyOHB4O1xuICB9XG5cbiAgOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xuICAgIGNvbG9yOiAjRTcyQjkwO1xufVxuXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWFwcGVhcmFuY2Utb3V0bGluZS5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtb3V0bGluZS10aGljayB7XG4gIGNvbG9yOiAjRTcyQjkwO1xufVxuOjpuZy1kZWVwIHRyLm1hdC1yb3c6aG92ZXIgdGQge1xuICBjb2xvcjogI2ZmZmZmZjtiYWNrZ3JvdW5kLWNvbG9yOiAjMEUxRjcwO1xufVxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXBhbmVsOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgYm94LXNoYWRvdzogMCAwcHggMTVweCAwcHggI0U3MkI5MDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuQmFua0RldGFpbHN7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cbiAgICAuUHJvZmlsZV9DaGFuZ2VfUGFzc3dvcmQsIC5Zb3VyX1Byb2ZpbGVfVXBkYXRlLCAuRXhjaGFuZ2VfTm90aWZpY2F0aW9ue1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIHRkLm1hdC1jZWxsLCB0ZC5tYXQtZm9vdGVyLWNlbGwsIHRoLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG4gICAgLkltZ0hvdmVyIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLTEwMHB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogLTM0MHB4O1xuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDAwcHgpIHtcbi5JbWdIb3ZlciB7XG4gICAgbWFyZ2luLXRvcDogLTEwMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMzI3cHg7XG4gICAgfVxufVxubWF0LWVycm9ye1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbn0iXX0= */"

/***/ }),

/***/ "./src/app/your-profile/your-profile.component.ts":
/*!********************************************************!*\
  !*** ./src/app/your-profile/your-profile.component.ts ***!
  \********************************************************/
/*! exports provided: MyErrorStateMatcher, YourProfileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MyErrorStateMatcher", function() { return MyErrorStateMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YourProfileComponent", function() { return YourProfileComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");



var MyErrorStateMatcher = /** @class */ (function () {
    function MyErrorStateMatcher() {
    }
    MyErrorStateMatcher.prototype.isErrorState = function (control, form) {
        var invalidCtrl = !!(control && control.invalid && control.parent.dirty);
        var invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);
        return (invalidCtrl || invalidParent);
    };
    return MyErrorStateMatcher;
}());

var ELEMENT_DATA = [
    { position: 1, name: 'AXIS Bank', weight: 'AXI0023545343652354', symbol: 'AXI001', View: 'create', Delete: 'delete_sweep' },
    { position: 2, name: 'IOB', weight: 'IOB0023545343652354', symbol: 'IOB0545', View: 'create', Delete: 'delete_sweep' },
    { position: 3, name: 'AXIS Bank', weight: 'AXI0023545343652354', symbol: 'AXI001', View: 'create', Delete: 'delete_sweep' },
    { position: 4, name: 'SBI', weight: 'AXI0023545343652354', symbol: 'SBI0337', View: 'create', Delete: 'delete_sweep' },
    { position: 5, name: 'AXIS Bank', weight: 'AXI0023545343652354', symbol: 'AXI001', View: 'create', Delete: 'delete_sweep' },
];
var YourProfileComponent = /** @class */ (function () {
    function YourProfileComponent(fb, cd, formBuilder) {
        this.fb = fb;
        this.cd = cd;
        this.formBuilder = formBuilder;
        this.ConfirmPassword = true;
        this.NewPassword = true;
        this.OldPassword = true;
        this.model = {};
        this.displayedColumns = ['position', 'name', 'weight', 'View', 'Delete'];
        this.dataSource = ELEMENT_DATA;
        this.matcher = new MyErrorStateMatcher();
        this.myForm = this.formBuilder.group({
            Old_password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]],
            confirmPassword: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        }, { validator: this.checkPasswords });
    }
    YourProfileComponent.prototype.ngOnInit = function () {
    };
    // constructor(private ) {
    // }
    YourProfileComponent.prototype.checkPasswords = function (group) {
        var pass = group.controls.password.value;
        var confirmPass = group.controls.confirmPassword.value;
        return pass === confirmPass ? null : { notSame: true };
    };
    YourProfileComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-your-profile',
            template: __webpack_require__(/*! ./your-profile.component.html */ "./src/app/your-profile/your-profile.component.html"),
            styles: [__webpack_require__(/*! ./your-profile.component.scss */ "./src/app/your-profile/your-profile.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]])
    ], YourProfileComponent);
    return YourProfileComponent;
}());



/***/ })

}]);
//# sourceMappingURL=user-panel-user-panel-module.js.map